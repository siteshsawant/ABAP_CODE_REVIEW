*&---------------------------------------------------------------------*
*   Program Name / Enhancement Name : ZR_PM_KPIFOT                     *
*&---------------------------------------------------------------------*
*   TCode : ZPM_FOT                                                    *
*   Description : Follow On Tasks                                      *
*   CR Number :                                                        *
*   Package : ZPM                                                      *
*   Date of Creation : 25-08-2022                                      *
*   Transport Request :                                                *
*&---------------------------------------------------------------------*
*   Func Consultant : Naveen Kumar                                     *
*   Tech Consultant : Sitesh Sawant                                    *
*&---------------------------------------------------------------------*

REPORT ZR_PM_KPIMTBF.

INCLUDE ZKPIMTBF_TOP. " Variables & Selection Screen

INITIALIZATION.
  INCLUDE ZTITLES2.
  PERFORM USER_DROP_DOWN_LIST_FORMN. " Month Dropdown
  PERFORM USER_DROP_DOWN_LIST_FORYR. " Year Dropdown
  PERFORM USER_DROP_DOWN_LIST_FORWK. " Week Dropdown
  PERFORM USER_DROP_DOWN_LIST_FORHR. " Hours Dropdown

AT SELECTION-SCREEN OUTPUT.
  PERFORM FROMEQUNR.

START-OF-SELECTION.
  DATA: EQUNR1 TYPE CHAR10.
  PERFORM GET_WEEKS. " Get all weeks and days of weeks except sundays.
  PERFORM GET_DATA.  " Get Data
  PERFORM DISPLAY_ALV.


FORM USER_DROP_DOWN_LIST_FORMN.
  DATA: NAME  TYPE VRM_ID,
        LIST  TYPE VRM_VALUES,
        VALUE LIKE LINE OF LIST.
  DATA: T_MONTHS TYPE T247 OCCURS 0 WITH HEADER LINE.
  CLEAR LIST. REFRESH LIST.
  NAME = 'P_MONTH'.
  SELECT * INTO TABLE T_MONTHS
  FROM T247 WHERE SPRAS EQ 'EN'.
  SORT T_MONTHS ASCENDING BY MNR.
  LOOP AT T_MONTHS.
    CLEAR VALUE.
    VALUE-KEY = T_MONTHS-MNR.
    VALUE-TEXT = T_MONTHS-LTX.
    APPEND VALUE TO LIST.
    P_MONTH = '01'.
  ENDLOOP.

  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID     = NAME
      VALUES = LIST.
ENDFORM.

FORM USER_DROP_DOWN_LIST_FORYR.
  DATA: NAME  TYPE VRM_ID,
        LIST  TYPE VRM_VALUES,
        VALUE LIKE LINE OF LIST.
  CLEAR LIST. REFRESH LIST.
  NAME = 'P_YEAR'.
  DO 100 TIMES.
    CLEAR VALUE.
    VALUE-KEY = 2000 + SY-INDEX.
    APPEND VALUE TO LIST.
  ENDDO.

  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID     = NAME
      VALUES = LIST.
  P_YEAR = '2022'.
ENDFORM.

FORM USER_DROP_DOWN_LIST_FORWK.
  DATA: NAME  TYPE VRM_ID,
        LIST  TYPE VRM_VALUES,
        VALUE LIKE LINE OF LIST.
  CLEAR LIST. REFRESH LIST.
  NAME = 'P_WEEK'.
  DO 5 TIMES.
    CLEAR VALUE.
    VALUE-KEY = SY-INDEX.
    CONCATENATE 'Week' SPACE VALUE-KEY INTO VALUE-TEXT RESPECTING BLANKS.
    APPEND VALUE TO LIST.
  ENDDO.
  CLEAR VALUE.
  VALUE-KEY = '0'.
  VALUE-TEXT = 'ALL'.
  APPEND VALUE TO LIST.
  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID     = NAME
      VALUES = LIST.
  P_WEEK = '0'.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  GET_WEEKS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_WEEKS .
  DATA: PAR_MONTH LIKE  T009B-BUMON,
        PAR_YEAR  LIKE  T009B-BDATJ,
        PAR_DAYS  LIKE  T009B-BUTAG,
        SDATE     LIKE SY-DATUM,
        LDATE     LIKE SY-DATUM,
        TEMPD     TYPE CHAR2,
        TEMPD2    TYPE CHAR2.

  PAR_MONTH = P_MONTH.
  PAR_YEAR = P_YEAR.
  CALL FUNCTION 'NUMBER_OF_DAYS_PER_MONTH_GET'
    EXPORTING
      PAR_MONTH = PAR_MONTH
      PAR_YEAR  = PAR_YEAR
    IMPORTING
      PAR_DAYS  = PAR_DAYS.
  DD = PAR_DAYS.
  CONCATENATE PAR_YEAR PAR_MONTH '01' INTO DATE1.
  CALL FUNCTION 'DATE_GET_WEEK'
    EXPORTING
      DATE = DATE1
    IMPORTING
      WEEK = WEEK1.
  CONCATENATE PAR_YEAR PAR_MONTH PAR_DAYS INTO DATE2.
  CALL FUNCTION 'DATE_GET_WEEK'
    EXPORTING
      DATE = DATE2
    IMPORTING
      WEEK = WEEK2.

  IF WEEK1+0(4) LT P_YEAR.
    CONCATENATE P_YEAR '01' INTO WEEK1.
  ENDIF.
  SWEEK = WEEK1+4(2).
  EWEEK = WEEK2+4(2).

  LOOPS = EWEEK - SWEEK.
  LOOPS = LOOPS + 1.
  DO LOOPS TIMES.
    CALL FUNCTION 'WEEK_GET_FIRST_DAY'
      EXPORTING
        WEEK = WEEK1
      IMPORTING
        DATE = SDATE.
    TEMP_WEEK = WEEK1 + 1.
    CALL FUNCTION 'WEEK_GET_FIRST_DAY'
      EXPORTING
        WEEK = TEMP_WEEK
      IMPORTING
        DATE = LDATE.
    LDATE = LDATE - 1.
    DATA: TDATE TYPE SY-DATUM,
          DAY   TYPE DTRESR-WEEKDAY.
    TEMPD = '0'.
    TEMPD = '1'.
    IF SDATE LT DATE1.
      SDATE = DATE1.
      TDATE = SDATE.
      WHILE TDATE <= LDATE.
        CALL FUNCTION 'DATE_TO_DAY'
          EXPORTING
            DATE    = TDATE
          IMPORTING
            WEEKDAY = DAY.
        IF DAY = 'Sunday'.
          TEMPD = '1'.
        ENDIF.
        TDATE = TDATE + 1.
      ENDWHILE.
      CLEAR TDATE.
    ELSEIF LDATE >= DATE2.
      LDATE = DATE2.
      TDATE = SDATE.
      WHILE TDATE <= LDATE.
        CALL FUNCTION 'DATE_TO_DAY'
          EXPORTING
            DATE    = TDATE
          IMPORTING
            WEEKDAY = DAY.
        IF DAY = 'Sunday'.
          TEMPD = '1'.
        ENDIF.
        TDATE = TDATE + 1.
      ENDWHILE.
      CLEAR TDATE.
    ENDIF.


    LT_WEEK-SIGN = 'I'.
    LT_WEEK-OPTION = 'BT'.
    LT_WEEK-LOW = SDATE.
    LT_WEEK-HIGH = LDATE.
    LT_WEEK-WEEK = SY-INDEX.
    IF LDATE EQ SDATE.
      LT_WEEK-WCOUNT = 1 - TEMPD.
    ELSE.
      LT_WEEK-WCOUNT = LDATE - SDATE.
      LT_WEEK-WCOUNT = LT_WEEK-WCOUNT + 1.
      IF P_SUN NE 'X'.
        LT_WEEK-WCOUNT = LT_WEEK-WCOUNT - TEMPD.
      ENDIF.
    ENDIF.
    APPEND LT_WEEK TO LT_WEEK.
    CLEAR TEMPD.
    WEEK1 = WEEK1 + 1.
  ENDDO.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FROMEQUNR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FROMEQUNR .
  IF P_EQUIP IS INITIAL.
    P_PLANT = ''.

  ENDIF.

  IF P_EQUIP IS NOT INITIAL.
    SELECT SINGLE WERKS FROM VIAUFKS INTO P_PLANT WHERE EQUNR EQ P_EQUIP.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  USER_DROP_DOWN_LIST_FORHR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM USER_DROP_DOWN_LIST_FORHR .
  DATA: NAME  TYPE VRM_ID,
        LIST  TYPE VRM_VALUES,
        VALUE LIKE LINE OF LIST.
  CLEAR LIST. REFRESH LIST.
  NAME = 'P_HOURS'.
  DO 25 TIMES.
    CLEAR VALUE.
    VALUE-KEY = SY-TABIX.
    CONCATENATE VALUE-KEY SPACE 'Hours' INTO VALUE-TEXT RESPECTING BLANKS.
    APPEND VALUE TO LIST.
  ENDDO.
  DELETE LIST INDEX 1.
  CLEAR VALUE.
  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID     = NAME
      VALUES = LIST.
  P_HOURS = '8'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_DATA .
  DATA: MONTH TYPE T247-LTX.
  IF P_WEEK NE 0.
    DELETE LT_WEEK WHERE WEEK NE P_WEEK.
  ENDIF.
  LOOP AT LT_WEEK.
    WEEKNO = SY-TABIX.
    SELECT * FROM VIAUFKS INTO CORRESPONDING FIELDS OF TABLE LT_VIAUFKS WHERE EQUNR EQ P_EQUIP AND WERKS EQ P_PLANT AND AUTYP EQ '30' AND AUART EQ 'ZPMM' AND ERDAT BETWEEN LT_WEEK-LOW AND LT_WEEK-HIGH.
    SELECT SINGLE LTX INTO MONTH FROM T247 WHERE SPRAS EQ 'EN' AND MNR EQ P_MONTH.
    CONCATENATE 'Week' SPACE WEEKNO SPACE 'of' SPACE MONTH P_YEAR INTO LT_FINAL-WEEK RESPECTING BLANKS.

    LOOP AT LT_VIAUFKS.
      LT_WO-WEEKNO = WEEKNO.
      LT_WO-AUFNR  = LT_VIAUFKS-AUFNR.
      LT_WO-AUART  = LT_VIAUFKS-AUART.
      LT_WO-EQUNR  = LT_VIAUFKS-EQUNR.
      SELECT SINGLE EQKTX FROM EQKT INTO LT_WO-EQKTX WHERE EQUNR EQ LT_VIAUFKS-EQUNR.
        CLEAR LT_JEST.
      SELECT SINGLE OBJNR STAT INACT FROM JEST INTO LT_JEST WHERE OBJNR EQ LT_VIAUFKS-OBJNR.
      IF LT_JEST-STAT EQ 'I0076' AND LT_JEST-INACT NE 'X'.
      ELSE.
        APPEND LT_WO TO LT_WO.
      ENDIF.
    ENDLOOP.
    DESCRIBE TABLE LT_VIAUFKS LINES LT_FINAL-WOCOUNT.
    LT_FINAL-EQUNR = P_EQUIP.
    LT_FINAL-HOURS = LT_WEEK-WCOUNT * P_HOURS.
    IF LT_FINAL-WOCOUNT EQ 0.
      LT_FINAL-MTBF = '0'.
    ELSE.
      LT_FINAL-MTBF = LT_FINAL-HOURS / LT_FINAL-WOCOUNT.
    ENDIF.
    LT_FINAL-LINE_COLOR = 'C110'.
    APPEND LT_FINAL TO LT_FINAL.

    CLEAR: LT_FINAL, LT_WO.
  ENDLOOP.
  LOOP AT LT_FINAL.
    TOTAL_WO = TOTAL_WO + LT_FINAL-WOCOUNT.
    TOTAL_HR = TOTAL_HR + LT_FINAL-HOURS.
  ENDLOOP.
  IF TOTAL_WO EQ 0.
    TOTAL_MTBF = 0.
  ELSE.
    TOTAL_MTBF = TOTAL_HR / TOTAL_WO.
  ENDIF.
  TOTAL_TEXT = 'MTBF TOTAL'.

  " Last Record
  LT_FINAL-WEEK = TOTAL_TEXT.
  LT_FINAL-WOCOUNT = TOTAL_WO.
  LT_FINAL-HOURS = TOTAL_HR.
  LT_FINAL-MTBF = TOTAL_MTBF.
  LT_FINAL-LINE_COLOR = 'C310'.
  APPEND LT_FINAL TO LT_FINAL.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAY_ALV .
  DATA LV_COL TYPE INT2.
  IF LT_FINAL IS NOT INITIAL.

    GD_LAYOUT-NO_INPUT          = 'X'.
    GD_LAYOUT-COLWIDTH_OPTIMIZE = 'X'.
    GD_LAYOUT-TOTALS_TEXT       = 'Totals'(201).
* Set layout field for row attributes(i.e. color)
    GD_LAYOUT-INFO_FIELDNAME =      'LINE_COLOR'.

*    IT_SORT-FIELDNAME ='EQUNR'.
*    IT_SORT-SPOS = 1.
*    IT_SORT-UP = 'X'.
*    IT_SORT-SUBTOT = 'X'.
*    APPEND IT_SORT TO WA_SORT.
*    CLEAR IT_SORT.

    LV_COL            = LV_COL + 1.
    WA_FCAT-COL_POS   = LV_COL.
    WA_FCAT-FIELDNAME = 'WEEK'.
    WA_FCAT-TABNAME   = 'LT_FINAL'.
    WA_FCAT-SELTEXT_L = 'WEEK'.
    WA_FCAT-EMPHASIZE = 'X'.
    WA_FCAT-JUST = 'C'.
    APPEND WA_FCAT TO IT_FCAT.
    CLEAR WA_FCAT.

    LV_COL            = LV_COL + 1.
    WA_FCAT-COL_POS   = LV_COL.
    WA_FCAT-FIELDNAME = 'EQUNR'.
    WA_FCAT-TABNAME   = 'LT_FINAL'.
    WA_FCAT-SELTEXT_L = 'Equipment No'.
    WA_FCAT-JUST = 'C'.
    WA_FCAT-HOTSPOT = 'X'.
    APPEND WA_FCAT TO IT_FCAT.
    CLEAR WA_FCAT.

    LV_COL            = LV_COL + 1.
    WA_FCAT-COL_POS   = LV_COL.
    WA_FCAT-FIELDNAME = 'WOCOUNT'.
    WA_FCAT-TABNAME   = 'LT_FINAL'.
    WA_FCAT-SELTEXT_L = 'Work Order Count'.
    WA_FCAT-JUST = 'C'.
    WA_FCAT-HOTSPOT = 'X'.
    APPEND WA_FCAT TO IT_FCAT.
    CLEAR WA_FCAT.

    LV_COL            = LV_COL + 1.
    WA_FCAT-COL_POS   = LV_COL.
    WA_FCAT-FIELDNAME = 'HOURS'.
    WA_FCAT-TABNAME   = 'LT_FINAL'.
    WA_FCAT-SELTEXT_L = 'Operating Hours'.
    WA_FCAT-EDIT_MASK   = '____Hours'.
    WA_FCAT-JUST = 'C'.
    APPEND WA_FCAT TO IT_FCAT.
    CLEAR WA_FCAT.

    LV_COL            = LV_COL + 1.
    WA_FCAT-COL_POS   = LV_COL.
    WA_FCAT-FIELDNAME = 'MTBF'.
    WA_FCAT-TABNAME   = 'LT_FINAL'.
    WA_FCAT-SELTEXT_L = 'MTBF'.
    WA_FCAT-EMPHASIZE = 'X'.
    WA_FCAT-OUTPUTLEN = '9'.
    WA_FCAT-EDIT_MASK   = '____Hours'.
    WA_FCAT-JUST = 'C'.
    APPEND WA_FCAT TO IT_FCAT.
    CLEAR WA_FCAT.

    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
      EXPORTING
*       I_INTERFACE_CHECK       = ' '
*       I_BYPASSING_BUFFER      = ' '
*       I_BUFFER_ACTIVE         = ' '
        I_CALLBACK_PROGRAM      = SY-REPID
*       I_CALLBACK_PF_STATUS_SET          = ' '
        I_CALLBACK_USER_COMMAND = 'USER_COMMAND'
*       I_CALLBACK_TOP_OF_PAGE  = ' '
*       I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*       I_CALLBACK_HTML_END_OF_LIST       = ' '
*       I_STRUCTURE_NAME        =
*       I_BACKGROUND_ID         = ' '
*       I_GRID_TITLE            =
*       I_GRID_SETTINGS         =
        IS_LAYOUT               = GD_LAYOUT
        IT_FIELDCAT             = IT_FCAT
*       IT_EXCLUDING            =
*       IT_SPECIAL_GROUPS       =
        IT_SORT                 = WA_SORT
*       IT_FILTER               =
*       IS_SEL_HIDE             =
*       I_DEFAULT               = 'X'
*       I_SAVE                  = ' '
*       IS_VARIANT              =
*       IT_EVENTS               =
*       IT_EVENT_EXIT           =
*       IS_PRINT                =
*       IS_REPREP_ID            =
*       I_SCREEN_START_COLUMN   = 0
*       I_SCREEN_START_LINE     = 0
*       I_SCREEN_END_COLUMN     = 0
*       I_SCREEN_END_LINE       = 0
*       I_HTML_HEIGHT_TOP       = 0
*       I_HTML_HEIGHT_END       = 0
*       IT_ALV_GRAPHICS         =
*       IT_HYPERLINK            =
*       IT_ADD_FIELDCAT         =
*       IT_EXCEPT_QINFO         =
*       IR_SALV_FULLSCREEN_ADAPTER        =
*     IMPORTING
*       E_EXIT_CAUSED_BY_CALLER =
*       ES_EXIT_CAUSED_BY_USER  =
      TABLES
        T_OUTTAB                = LT_FINAL
*     EXCEPTIONS
*       PROGRAM_ERROR           = 1
*       OTHERS                  = 2
      .
  ENDIF.
ENDFORM.

FORM USER_COMMAND USING R_UCOMM TYPE SY-UCOMM
      RS_SELFIELD TYPE SLIS_SELFIELD.
  DATA LAST TYPE CHAR1.
  CASE R_UCOMM.
    WHEN '&IC1'.
      CLEAR LAST.
      IF RS_SELFIELD-SEL_TAB_FIELD EQ 'LT_FINAL-WOCOUNT'.
        DESCRIBE TABLE LT_FINAL LINES LAST.
        IF RS_SELFIELD-TABINDEX EQ LAST.
          REFRESH LT_SUBLIST.
          LOOP AT LT_WO.
            APPEND LT_WO TO LT_SUBLIST.
          ENDLOOP.
        ELSE.
          REFRESH LT_SUBLIST.
          LOOP AT LT_WO WHERE WEEKNO EQ RS_SELFIELD-TABINDEX.
            APPEND LT_WO TO LT_SUBLIST.
          ENDLOOP.
        ENDIF.
        PERFORM DISPLAY_SUBLIST.
      ELSEIF RS_SELFIELD-SEL_TAB_FIELD EQ 'LT_SUBLIST-AUFNR'.
        DATA: DT_AUFNR LIKE LT_SUBLIST.
        READ TABLE LT_SUBLIST INDEX RS_SELFIELD-TABINDEX INTO DT_AUFNR.
        SET PARAMETER ID 'ANR' FIELD DT_AUFNR-AUFNR.
        CALL TRANSACTION 'IW33' AND SKIP FIRST SCREEN .
        CLEAR DT_AUFNR.
      ELSEIF RS_SELFIELD-SEL_TAB_FIELD EQ 'LT_SUBLIST-EQUNR'.
        SET PARAMETER ID 'EQN' FIELD P_EQUIP.
        CALL TRANSACTION 'IE03' AND SKIP FIRST SCREEN .
      ELSEIF RS_SELFIELD-SEL_TAB_FIELD EQ 'LT_FINAL-EQUNR'.
        SET PARAMETER ID 'EQN' FIELD P_EQUIP.
        CALL TRANSACTION 'IE03' AND SKIP FIRST SCREEN .

      ENDIF.
  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SUBLIST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAY_SUBLIST .
  DATA: LV_COL TYPE CHAR1.
  GD_LAYOUT2-NO_INPUT          = 'X'.
  GD_LAYOUT2-COLWIDTH_OPTIMIZE = 'X'.
* Set layout field for row attributes(i.e. color)
  GD_LAYOUT2-INFO_FIELDNAME =      'LINE_COLOR'.

  REFRESH IT_FCAT2.
*  IT_SORT2-FIELDNAME ='EQUNR'.
*  IT_SORT2-SPOS = 1.
*  IT_SORT2-UP = 'X'.
*  IT_SORT2-SUBTOT = 'X'.
*  APPEND IT_SORT2 TO WA_SORT2.
*  CLEAR IT_SORT2.
*
*  IT_SORT2-FIELDNAME ='EQKTX'.
*  IT_SORT2-SPOS = 1.
*  IT_SORT2-UP = 'X'.
*  IT_SORT2-SUBTOT = 'X'.
*  APPEND IT_SORT2 TO WA_SORT2.
*  CLEAR IT_SORT2.

  LV_COL            = LV_COL + 1.
  WA_FCAT2-COL_POS   = LV_COL.
  WA_FCAT2-FIELDNAME = 'WEEKNO'.
  WA_FCAT2-TABNAME   = 'LT_SUBLIST'.
  WA_FCAT2-SELTEXT_L = 'Week No'.
  WA_FCAT2-EMPHASIZE = 'X'.
  WA_FCAT2-JUST = 'C'.
  APPEND WA_FCAT2 TO IT_FCAT2.
  CLEAR WA_FCAT2.

  LV_COL            = LV_COL + 1.
  WA_FCAT2-COL_POS   = LV_COL.
  WA_FCAT2-FIELDNAME = 'AUFNR'.
  WA_FCAT2-TABNAME   = 'LT_SUBLIST'.
  WA_FCAT2-SELTEXT_L = 'Work Order No'.
  WA_FCAT2-EMPHASIZE = 'X'.
  WA_FCAT2-JUST = 'C'.
  WA_FCAT2-HOTSPOT = 'X'.
  APPEND WA_FCAT2 TO IT_FCAT2.
  CLEAR WA_FCAT2.

  LV_COL            = LV_COL + 1.
  WA_FCAT2-COL_POS   = LV_COL.
  WA_FCAT2-FIELDNAME = 'AUART'.
  WA_FCAT2-TABNAME   = 'LT_SUBLIST'.
  WA_FCAT2-SELTEXT_L = 'Work Order Type'.
  WA_FCAT2-JUST = 'C'.
  APPEND WA_FCAT2 TO IT_FCAT2.
  CLEAR WA_FCAT2.

  LV_COL            = LV_COL + 1.
  WA_FCAT2-COL_POS   = LV_COL.
  WA_FCAT2-FIELDNAME = 'EQUNR'.
  WA_FCAT2-TABNAME   = 'LT_SUBLIST'.
  WA_FCAT2-SELTEXT_L = 'Equipment No'.
  WA_FCAT2-HOTSPOT = 'X'.
  WA_FCAT2-JUST = 'C'.
  APPEND WA_FCAT2 TO IT_FCAT2.
  CLEAR WA_FCAT2.

  LV_COL            = LV_COL + 1.
  WA_FCAT2-COL_POS   = LV_COL.
  WA_FCAT2-FIELDNAME = 'EQKTX'.
  WA_FCAT2-TABNAME   = 'LT_SUBLIST'.
  WA_FCAT2-SELTEXT_L = 'Equipment Description'.
  WA_FCAT2-JUST = 'C'.
  APPEND WA_FCAT2 TO IT_FCAT2.
  CLEAR WA_FCAT2.


  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK       = ' '
*     I_BYPASSING_BUFFER      = ' '
*     I_BUFFER_ACTIVE         = ' '
      I_CALLBACK_PROGRAM      = SY-REPID
*     I_CALLBACK_PF_STATUS_SET          = ' '
      I_CALLBACK_USER_COMMAND = 'USER_COMMAND'
*     I_CALLBACK_TOP_OF_PAGE  = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME        =
*     I_BACKGROUND_ID         = ' '
*     I_GRID_TITLE            =
*     I_GRID_SETTINGS         =
      IS_LAYOUT               = GD_LAYOUT2
      IT_FIELDCAT             = IT_FCAT2
*     IT_EXCLUDING            =
*     IT_SPECIAL_GROUPS       =
      IT_SORT                 = WA_SORT2
*     IT_FILTER               =
*     IS_SEL_HIDE             =
*     I_DEFAULT               = 'X'
*     I_SAVE                  = ' '
*     IS_VARIANT              =
*     IT_EVENTS               =
*     IT_EVENT_EXIT           =
*     IS_PRINT                =
*     IS_REPREP_ID            =
*     I_SCREEN_START_COLUMN   = 0
*     I_SCREEN_START_LINE     = 0
*     I_SCREEN_END_COLUMN     = 0
*     I_SCREEN_END_LINE       = 0
*     I_HTML_HEIGHT_TOP       = 0
*     I_HTML_HEIGHT_END       = 0
*     IT_ALV_GRAPHICS         =
*     IT_HYPERLINK            =
*     IT_ADD_FIELDCAT         =
*     IT_EXCEPT_QINFO         =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*     IMPORTING
*     E_EXIT_CAUSED_BY_CALLER =
*     ES_EXIT_CAUSED_BY_USER  =
    TABLES
      T_OUTTAB                = LT_SUBLIST
*     EXCEPTIONS
*     PROGRAM_ERROR           = 1
*     OTHERS                  = 2
    .
ENDFORM.
