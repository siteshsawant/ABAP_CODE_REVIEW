*&---------------------------------------------------------------------*
*& Report  ZR_PM_KPI_MAINT_BACKLOG
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZR_PM_KPI_MAINT_BACKLOG.

INCLUDE ZINIT_MB.

INITIALIZATION.
  T1 = 'Plant'.
  T2 = 'Period'.
  T3 = 'Week'.
  PERFORM USER_DROP_DOWN_LIST_FORDT.
  PERFORM USER_DROP_DOWN_LIST_FORYR.
  PERFORM USER_DROP_DOWN_LIST_FORWK.

START-OF-SELECTION.
  PERFORM GET_WEEKS.
  PERFORM GET_DATA.

  PERFORM BUILD_FIELDCATALOG.
  PERFORM BUILD_LAYOUT.
  PERFORM DISPLAY_ALV_REPORT.

FORM USER_DROP_DOWN_LIST_FORDT.
  DATA: NAME  TYPE VRM_ID,
        LIST  TYPE VRM_VALUES,
        VALUE LIKE LINE OF LIST.
  DATA: T_MONTHS TYPE T247 OCCURS 0 WITH HEADER LINE.
  CLEAR LIST. REFRESH LIST.
  NAME = 'P_MONTH'.
  SELECT * INTO TABLE T_MONTHS
  FROM T247 WHERE SPRAS EQ 'EN'.
  SORT T_MONTHS ASCENDING BY MNR.
  LOOP AT T_MONTHS.
    CLEAR VALUE.
    VALUE-KEY = T_MONTHS-MNR.
    VALUE-TEXT = T_MONTHS-LTX.
    APPEND VALUE TO LIST.
    P_MONTH = '01'.
  ENDLOOP.

  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID     = NAME
      VALUES = LIST.
ENDFORM.

FORM USER_DROP_DOWN_LIST_FORYR.
  DATA: NAME  TYPE VRM_ID,
        LIST  TYPE VRM_VALUES,
        VALUE LIKE LINE OF LIST.
  CLEAR LIST. REFRESH LIST.
  NAME = 'P_YEAR'.
  DO 100 TIMES.
    CLEAR VALUE.
    VALUE-KEY = 2000 + SY-INDEX.
    APPEND VALUE TO LIST.
  ENDDO.

  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID     = NAME
      VALUES = LIST.
  P_YEAR = '2022'.
ENDFORM.

FORM USER_DROP_DOWN_LIST_FORWK.
  DATA: NAME  TYPE VRM_ID,
        LIST  TYPE VRM_VALUES,
        VALUE LIKE LINE OF LIST.
  CLEAR LIST. REFRESH LIST.
  NAME = 'P_WEEK'.
  DO 5 TIMES.
    CLEAR VALUE.
    VALUE-KEY = SY-INDEX.
    CONCATENATE 'Week' SPACE VALUE-KEY INTO VALUE-TEXT RESPECTING BLANKS.
    APPEND VALUE TO LIST.
  ENDDO.
  CLEAR VALUE.
  VALUE-KEY = '0'.
  VALUE-TEXT = 'ALL'.
  APPEND VALUE TO LIST.
  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID     = NAME
      VALUES = LIST.
  P_WEEK = '0'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_WEEKS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_WEEKS .
  DATA: PAR_MONTH LIKE  T009B-BUMON,
        PAR_YEAR  LIKE  T009B-BDATJ,
        PAR_DAYS  LIKE  T009B-BUTAG,
        SDATE     LIKE SY-DATUM,
        LDATE     LIKE SY-DATUM,
        TEMPD     TYPE SY-DATUM.

  PAR_MONTH = P_MONTH.
  PAR_YEAR = P_YEAR.
  CALL FUNCTION 'NUMBER_OF_DAYS_PER_MONTH_GET'
    EXPORTING
      PAR_MONTH = PAR_MONTH
      PAR_YEAR  = PAR_YEAR
    IMPORTING
      PAR_DAYS  = PAR_DAYS.
  DD = PAR_DAYS.
  CONCATENATE PAR_YEAR PAR_MONTH '01' INTO DATE1.
  CALL FUNCTION 'DATE_GET_WEEK'
    EXPORTING
      DATE = DATE1
    IMPORTING
      WEEK = WEEK1.
  CONCATENATE PAR_YEAR PAR_MONTH PAR_DAYS INTO DATE2.
  CALL FUNCTION 'DATE_GET_WEEK'
    EXPORTING
      DATE = DATE2
    IMPORTING
      WEEK = WEEK2.

  IF WEEK1+0(4) LT P_YEAR.
    CONCATENATE P_YEAR '01' INTO WEEK1.
  ENDIF.
  SWEEK = WEEK1+4(2).
  EWEEK = WEEK2+4(2).

  LOOPS = EWEEK - SWEEK.
  LOOPS = LOOPS + 1.
  DO LOOPS TIMES.
    CALL FUNCTION 'WEEK_GET_FIRST_DAY'
      EXPORTING
        WEEK = WEEK1
      IMPORTING
        DATE = SDATE.
    TEMP_WEEK = WEEK1 + 1.
    CALL FUNCTION 'WEEK_GET_FIRST_DAY'
      EXPORTING
        WEEK = TEMP_WEEK
      IMPORTING
        DATE = LDATE.
    LDATE = LDATE - 1.
    DATA: TDATE TYPE SY-DATUM,
          DAY   TYPE DTRESR-WEEKDAY.
    TEMPD = '0'.
    IF SDATE LT DATE1.
      SDATE = DATE1.
      TDATE = SDATE.
      WHILE TDATE <= LDATE.
        CALL FUNCTION 'DATE_TO_DAY'
          EXPORTING
            DATE    = TDATE
          IMPORTING
            WEEKDAY = DAY.
        IF DAY = 'Sunday'.
          TEMPD = '1'.
        ENDIF.
        TDATE = TDATE + 1.
      ENDWHILE.
      CLEAR TDATE.
    ELSEIF LDATE >= DATE2.
      LDATE = DATE2.
      TDATE = SDATE.
      WHILE TDATE <= LDATE.
        CALL FUNCTION 'DATE_TO_DAY'
          EXPORTING
            DATE    = TDATE
          IMPORTING
            WEEKDAY = DAY.
        IF DAY = 'Sunday'.
          TEMPD = '1'.
        ENDIF.
        TDATE = TDATE + 1.
      ENDWHILE.
      CLEAR TDATE.
    ENDIF.

    LT_WEEK-SIGN = 'I'.
    LT_WEEK-OPTION = 'BT'.
    LT_WEEK-LOW = SDATE.
    LT_WEEK-HIGH = LDATE.
    LT_WEEK-WEEK = SY-INDEX.
    IF LDATE EQ SDATE.
      LT_WEEK-WCOUNT = 1 - TEMPD.
    ELSE.
      LT_WEEK-WCOUNT = LDATE - SDATE - TEMPD.
    ENDIF.
    APPEND LT_WEEK TO LT_WEEK.
    CLEAR TEMPD.
    WEEK1 = WEEK1 + 1.
  ENDDO.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_DATA .
  WEEKNO = 0.
  DATA: DT_QMDAT TYPE QMEL-QMDAT.
  LOOP AT LT_WEEK.
    WEEKNO = WEEKNO + 1.
    CLEAR: CCOUNT, TCOUNT.
    SELECT QMNUM QMART QMDAT MZEIT AUFNR FROM VIQMEL INTO CORRESPONDING FIELDS OF TABLE LT_VIQMEL WHERE QMART IN ('M1','M2','M3') AND IWERK EQ P_PLANT AND QMDAT BETWEEN LT_WEEK-LOW AND LT_WEEK-HIGH.
    LOOP AT LT_VIQMEL.
      CLEAR: LT_AUFK.
      IF LT_VIQMEL-AUFNR NE ''.
        SELECT SINGLE AUFNR ERDAT ERFZEIT FROM AUFK INTO CORRESPONDING FIELDS OF LT_AUFK WHERE AUFNR EQ LT_VIQMEL-AUFNR.
        DT_QMDAT = LT_VIQMEL-QMDAT + 2.

        LT_CREATED-WEEK = WEEKNO.
        LT_CREATED-QMNUM = LT_VIQMEL-QMNUM.
        LT_CREATED-QMART = LT_VIQMEL-QMART.
        LT_CREATED-QMDAT = LT_VIQMEL-QMDAT.
        LT_CREATED-MZEIT = LT_VIQMEL-MZEIT.
        LT_CREATED-AUFNR = LT_AUFK-AUFNR.
        LT_CREATED-ERDAT = LT_AUFK-ERDAT.
        LT_CREATED-ERFZEIT = LT_AUFK-ERFZEIT.
        LT_TOTAL-WEEK = WEEKNO.
        LT_TOTAL-QMNUM = LT_VIQMEL-QMNUM.
        LT_TOTAL-QMART = LT_VIQMEL-QMART.
        LT_TOTAL-QMDAT = LT_VIQMEL-QMDAT.
        LT_TOTAL-MZEIT = LT_VIQMEL-MZEIT.
        LT_TOTAL-AUFNR = LT_AUFK-AUFNR.
        LT_TOTAL-ERDAT = LT_AUFK-ERDAT.
        LT_TOTAL-ERFZEIT = LT_AUFK-ERFZEIT.

        IF LT_AUFK-ERDAT > DT_QMDAT.
          CCOUNT = CCOUNT + 1.
          TCOUNT = TCOUNT + 1.

          APPEND LT_CREATED TO LT_CREATED.
          APPEND LT_TOTAL TO LT_TOTAL.
        ELSEIF LT_AUFK-ERDAT = DT_QMDAT AND LT_AUFK-ERFZEIT > LT_VIQMEL-MZEIT.
          CCOUNT = CCOUNT + 1.
          TCOUNT = TCOUNT + 1.
          APPEND LT_CREATED TO LT_CREATED.
          APPEND LT_TOTAL TO LT_TOTAL.
        ELSE.
          TCOUNT = TCOUNT + 1.
          APPEND LT_TOTAL TO LT_TOTAL.
        ENDIF.
      ELSE.
        CLEAR: LT_CREATED, LT_TOTAL.
        LT_CREATED-WEEK = WEEKNO.
        LT_CREATED-QMNUM = LT_VIQMEL-QMNUM.
        LT_CREATED-QMART = LT_VIQMEL-QMART.
        LT_CREATED-QMDAT = LT_VIQMEL-QMDAT.
        LT_CREATED-MZEIT = LT_VIQMEL-MZEIT.
        LT_TOTAL-WEEK = WEEKNO.
        LT_TOTAL-QMNUM = LT_VIQMEL-QMNUM.
        LT_TOTAL-QMART = LT_VIQMEL-QMART.
        LT_TOTAL-QMDAT = LT_VIQMEL-QMDAT.
        LT_TOTAL-MZEIT = LT_VIQMEL-MZEIT.
        CCOUNT = CCOUNT + 1.
        TCOUNT = TCOUNT + 1.
        APPEND LT_CREATED TO LT_CREATED.
        APPEND LT_TOTAL TO LT_TOTAL.
      ENDIF.
    ENDLOOP.
    DATA MONTH TYPE STRING.
    SELECT SINGLE LTX INTO MONTH FROM T247 WHERE SPRAS EQ 'EN' AND MNR EQ P_MONTH.
    CONCATENATE 'Week' ' ' WEEKNO ' ' 'of' ' ' MONTH ' ' P_YEAR INTO LT_FINAL-WEEK RESPECTING BLANKS.
    LT_FINAL-CW = CCOUNT.
    LT_FINAL-TW = TCOUNT.
    APPEND LT_FINAL TO LT_FINAL.
  ENDLOOP.
  IF P_WEEK NE 0.
    READ TABLE LT_FINAL INDEX P_WEEK.
    APPEND LT_FINAL TO LT_FINAL2.
  ELSE.
    LOOP AT LT_FINAL.
      APPEND LT_FINAL TO LT_FINAL2.
    ENDLOOP.
  ENDIF.
ENDFORM.

FORM BUILD_FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'WEEK'.
  FIELDCATALOG-SELTEXT_L   = 'Week'.
  FIELDCATALOG-COL_POS     = 0.
  FIELDCATALOG-JUST        = 'C'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'CW'.
  FIELDCATALOG-SELTEXT_L   = 'Maintenance Backlog'.
  FIELDCATALOG-COL_POS     = 1.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-HOTSPOT     = 'X'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'TW'.
  FIELDCATALOG-SELTEXT_L   = 'Total Notification'.
  FIELDCATALOG-COL_POS     = 2.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-HOTSPOT     = 'X'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG2-FIELDNAME   = 'WEEK'.
  FIELDCATALOG2-SELTEXT_L   = 'Week No'.
  FIELDCATALOG2-COL_POS     = 0.
  FIELDCATALOG2-JUST        = 'C'.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'QMNUM'.
  FIELDCATALOG2-SELTEXT_L   = 'Notification Number'.
  FIELDCATALOG2-COL_POS     = 1.
  FIELDCATALOG2-JUST        = 'C'.
  FIELDCATALOG2-HOTSPOT       = 'X'.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'QMDAT'.
  FIELDCATALOG2-SELTEXT_L   = 'Notification Creation Date'.
  FIELDCATALOG2-COL_POS     = 3.
  FIELDCATALOG2-JUST        = 'C'.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

    FIELDCATALOG2-FIELDNAME   = 'MZEIT'.
  FIELDCATALOG2-SELTEXT_L   = 'Notification Creation Time'.
  FIELDCATALOG2-COL_POS     = 4.
  FIELDCATALOG2-JUST        = 'C'.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'AUFNR'.
  FIELDCATALOG2-SELTEXT_L   = 'Work Order'.
  FIELDCATALOG2-COL_POS     = 5.
  FIELDCATALOG2-JUST        = 'C'.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'ERDAT'.
  FIELDCATALOG2-SELTEXT_L   = 'Work Order Created Date'.
  FIELDCATALOG2-COL_POS     = 6.
  FIELDCATALOG2-JUST        = 'C'.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

    FIELDCATALOG2-FIELDNAME   = 'ERFZEIT'.
  FIELDCATALOG2-SELTEXT_L   = 'Work Order Created Time'.
  FIELDCATALOG2-COL_POS     = 6.
  FIELDCATALOG2-JUST        = 'C'.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

ENDFORM.                    " BUILD_FIELDCATALOG


*&---------------------------------------------------------------------*
*&      Form  BUILD_LAYOUT
*&---------------------------------------------------------------------*
*       Build layout for ALV grid report
*----------------------------------------------------------------------*
FORM BUILD_LAYOUT.
  GD_LAYOUT-NO_INPUT          = 'X'.
  GD_LAYOUT-COLWIDTH_OPTIMIZE = 'X'.
  GD_LAYOUT-INFO_FIELDNAME =      'LINE_COLOR'.
  GD_LAYOUT2-NO_INPUT          = 'X'.
  GD_LAYOUT2-COLWIDTH_OPTIMIZE = 'X'.
  GD_LAYOUT2-INFO_FIELDNAME =      'LINE_COLOR'.
ENDFORM.                    " BUILD_LAYOUT

FORM DISPLAY_ALV_REPORT.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM      = SY-REPID
      I_CALLBACK_USER_COMMAND = 'USER_COMMAND'
      IS_LAYOUT               = GD_LAYOUT
      IT_FIELDCAT             = FIELDCATALOG[]
    TABLES
      T_OUTTAB                = LT_FINAL2
    EXCEPTIONS
      PROGRAM_ERROR           = 1
      OTHERS                  = 2.
  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.                    " DISPLAY_ALV_REPORT

FORM USER_COMMAND USING R_UCOMM TYPE SY-UCOMM
    RS_SELFIELD TYPE SLIS_SELFIELD.
  DATA: LAST TYPE CHAR1.
  CASE R_UCOMM.
    WHEN '&IC1'.
      CLEAR LAST.
      IF RS_SELFIELD-SEL_TAB_FIELD EQ '1-CW'.
        REFRESH LT_SUBLIST.
        LOOP AT LT_CREATED WHERE WEEK = RS_SELFIELD-TABINDEX.
          APPEND LT_CREATED TO LT_SUBLIST.
        ENDLOOP.
        SORT LT_SUBLIST ASCENDING.
        CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
          EXPORTING
            I_CALLBACK_PROGRAM      = SY-REPID
            I_CALLBACK_USER_COMMAND = 'USER_COMMAND'
            IS_LAYOUT               = GD_LAYOUT2
            IT_FIELDCAT             = FIELDCATALOG2[]
          TABLES
            T_OUTTAB                = LT_SUBLIST
          EXCEPTIONS
            PROGRAM_ERROR           = 1
            OTHERS                  = 2.
        IF SY-SUBRC <> 0.
          MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                  WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
        ENDIF.
      ELSEIF RS_SELFIELD-SEL_TAB_FIELD EQ '1-TW'.

        REFRESH LT_SUBLIST.
        LOOP AT LT_TOTAL WHERE WEEK = RS_SELFIELD-TABINDEX.
          APPEND LT_TOTAL TO LT_SUBLIST.
        ENDLOOP.
        SORT LT_SUBLIST ASCENDING.
        CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
          EXPORTING
            I_CALLBACK_PROGRAM      = SY-REPID
            I_CALLBACK_USER_COMMAND = 'USER_COMMAND'
            IS_LAYOUT               = GD_LAYOUT2
            IT_FIELDCAT             = FIELDCATALOG2[]
          TABLES
            T_OUTTAB                = LT_SUBLIST
          EXCEPTIONS
            PROGRAM_ERROR           = 1
            OTHERS                  = 2.
        IF SY-SUBRC <> 0.
          MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                  WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
        ENDIF.
      ELSEIF RS_SELFIELD-SEL_TAB_FIELD EQ '1-AUFNR'.
        DATA: DT_AUFNR LIKE LT_SUBLIST.
        READ TABLE LT_SUBLIST INDEX RS_SELFIELD-TABINDEX INTO DT_AUFNR.
        SET PARAMETER ID 'ANR' FIELD DT_AUFNR-AUFNR.
        CALL TRANSACTION 'IW33' AND SKIP FIRST SCREEN .
        CLEAR DT_AUFNR.
      ELSEIF RS_SELFIELD-SEL_TAB_FIELD EQ '1-QMNUM'.
        DATA: DT_QMNUM LIKE LT_SUBLIST.
        READ TABLE LT_SUBLIST INDEX RS_SELFIELD-TABINDEX INTO DT_QMNUM.
        SET PARAMETER ID 'IQM' FIELD DT_QMNUM-QMNUM.
        CALL TRANSACTION 'IW23' AND SKIP FIRST SCREEN .
        CLEAR DT_QMNUM.

      ENDIF.


  ENDCASE.

ENDFORM.
