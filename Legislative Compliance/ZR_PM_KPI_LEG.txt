*&---------------------------------------------------------------------*
*Program Name / Enhancement Name : Legislative compliance
*TCode: ZPM_LEG
*Description
*CR Number
*Package : ZPM
*Date of Creation
*TR
*Func Consultant : Naveen Kumar
*Tech Consultant: Sitesh Sawant
*&---------------------------------------------------------------------*
REPORT ZR_PM_KPI_LEG.
INCLUDE ZINIT_LEG.

INITIALIZATION.
  T1 = 'Plant'.
  T2 = 'Period'.
  T3 = 'Week'.
  PERFORM USER_DROP_DOWN_LIST_FORDT.
  PERFORM USER_DROP_DOWN_LIST_FORYR.
  PERFORM USER_DROP_DOWN_LIST_FORWK.

************************************************************************
*Start-of-selection.
START-OF-SELECTION.

  PERFORM DATA_RETRIEVAL.
  PERFORM BUILD_FIELDCATALOG.
  PERFORM BUILD_LAYOUT.
  PERFORM DISPLAY_ALV_REPORT.

*&---------------------------------------------------------------------*
*&      Form  DATA_RETRIEVAL
*&---------------------------------------------------------------------*
*       Retrieve data form EKPO table and populate itab it_ekko
*----------------------------------------------------------------------*
FORM DATA_RETRIEVAL.

  PERFORM GET_WEEKS.

  DATA : INDEX(4)  TYPE C,
         MONTH(10) TYPE C,
         KEY(30)   TYPE C,
         YDF       TYPE SY-DATUM,
         YDL       TYPE SY-DATUM,
         DATE      TYPE CHAR10,
         TIME      TYPE CHAR8,
         TOTAL     TYPE INT2,
         TOTAL2    TYPE INT2,
         TOTAL3    TYPE INT2,
         TCOUNT    TYPE INT2,
         CCOUNT    TYPE INT2,
         ILARTX    TYPE AFIH-ILART
         "FLGG      TYPE CHAR1
         .

  SELECT * FROM AUFK INTO CORRESPONDING FIELDS OF TABLE LT_AUFK WHERE WERKS EQ P_PLANT AND AUTYP EQ '30' AND AUART EQ 'ZPMS'.

  SELECT * FROM JEST INTO CORRESPONDING FIELDS OF TABLE LT_JEST FOR ALL ENTRIES IN LT_AUFK WHERE OBJNR EQ LT_AUFK-OBJNR AND STAT EQ 'I0076'.
  LOOP AT LT_JEST.
    DELETE LT_AUFK WHERE OBJNR EQ LT_JEST-OBJNR.
  ENDLOOP.
  LOOP AT LT_AUFK.
    CLEAR ILARTX.
    SELECT SINGLE ILART FROM AFIH INTO ILARTX WHERE AUFNR = LT_AUFK-AUFNR.
    IF ILARTX = 'LEG'.
      CLEAR LT_JEST.
      DATA: TOT TYPE INT2.
      SELECT * FROM JEST INTO CORRESPONDING FIELDS OF TABLE LT_JEST WHERE OBJNR = LT_AUFK-OBJNR AND INACT NE 'X' AND STAT IN ('I0002','I0009','I0010','I0045','I0046').
      DESCRIBE TABLE LT_JEST LINES TOT.
      IF TOT > 0.
        APPEND LT_AUFK TO LT_AUFK1.
      ENDIF.
    ENDIF.

  ENDLOOP.
  DELETE ADJACENT DUPLICATES FROM LT_AUFK1.

  LOOP AT LT_AUFK1.
    CLEAR LT_JEST.
    DATA: TOT2 TYPE INT2.
    SELECT * FROM JEST INTO CORRESPONDING FIELDS OF TABLE LT_JEST WHERE OBJNR = LT_AUFK1-OBJNR AND INACT NE 'X' AND STAT IN ('I0045','I0046').
    DESCRIBE TABLE LT_JEST LINES TOT2.
    IF TOT2 > 0.
      APPEND LT_AUFK1 TO LT_AUFK2.
    ENDIF.
  ENDLOOP.


  DATA: WINDEX TYPE CHAR4.
  WINDEX = 1.

  LOOP AT LT_WEEK.
    CLEAR: CCOUNT, TCOUNT, LT_FINAL.
    LOOP AT LT_AUFK1.
*      IF LT_WEEK-WEEK = '3'.
*        BREAK-POINT.
*      ENDIF.
      CLEAR: LT_AFKO, LT_CDHDR, LT_CDPOS, TIME, DATE, LT_PLANNED, LT_AFIH.
      SELECT SINGLE * FROM AFIH INTO CORRESPONDING FIELDS OF LT_AFIH WHERE AUFNR = LT_AUFK1-AUFNR.
      SELECT * FROM JCDS INTO CORRESPONDING FIELDS OF TABLE LT_JCDS WHERE OBJNR = LT_AUFK1-OBJNR AND STAT = 'I0002' AND INACT NE 'X'.
      SORT LT_JCDS DESCENDING BY UDATE UTIME.
      READ TABLE LT_JCDS INDEX 1.
      CLEAR KEY.
      CONCATENATE SY-MANDT LT_AUFK1-AUTYP LT_AUFK1-AUFNR INTO KEY.
      CLEAR LT_CDPOS.
      SELECT SINGLE * FROM AFKO INTO CORRESPONDING FIELDS OF LT_AFKO2 WHERE AUFNR = LT_AUFK1-AUFNR.
      SELECT * FROM CDPOS INTO CORRESPONDING FIELDS OF TABLE LT_CDPOS WHERE OBJECTID = KEY AND TABNAME = 'AFKO' AND FNAME = 'GLTRP'.
      DESCRIBE TABLE LT_CDPOS LINES TOTAL.
      IF TOTAL > 0.
        REFRESH LT_CDHDR.
        LOOP AT LT_CDPOS.
          CONCATENATE LT_JCDS-UTIME+0(2) LT_JCDS-UTIME+2(2) LT_JCDS-UTIME+4(2) INTO TIME.
          CONCATENATE LT_JCDS-UDATE+0(4) LT_JCDS-UDATE+4(2) LT_JCDS-UDATE+6(2) INTO DATE.
          SELECT SINGLE * FROM CDHDR INTO CORRESPONDING FIELDS OF LT_CDHDR WHERE CHANGENR = LT_CDPOS-CHANGENR AND UDATE <= DATE AND UTIME <= TIME.
          IF LT_CDHDR IS NOT INITIAL.
            APPEND LT_CDHDR TO LT_CDHDR.
          ENDIF.
        ENDLOOP.
        DESCRIBE TABLE LT_CDHDR LINES TOTAL2.
        CLEAR: LT_CDPOS2, LT_CDPOS, LT_CDHDR.
        IF TOTAL2 = 0.
          SELECT * FROM CDHDR INTO CORRESPONDING FIELDS OF TABLE LT_CDHDR WHERE OBJECTID = KEY AND UDATE >= DATE AND UTIME >= TIME.
          SORT LT_CDHDR ASCENDING BY UDATE UTIME.
          READ TABLE LT_CDHDR INDEX 1.
          READ TABLE LT_CDPOS INTO LT_CDPOS2 WITH KEY CHANGENR = LT_CDHDR-CHANGENR.
        ELSE.
          SORT LT_CDHDR DESCENDING BY UDATE UTIME.
          READ TABLE LT_CDHDR INDEX 1.
          READ TABLE LT_CDPOS INTO LT_CDPOS WITH KEY CHANGENR = LT_CDHDR-CHANGENR.
        ENDIF.
      ELSE.
        CLEAR LT_AFKO.
        REFRESH LT_AFKO.
        SELECT SINGLE * FROM AFKO INTO CORRESPONDING FIELDS OF LT_AFKO WHERE AUFNR = LT_AUFK1-AUFNR.

      ENDIF.


      IF LT_AFKO IS NOT INITIAL AND LT_AFKO-GLTRP BETWEEN LT_WEEK-LOW AND LT_WEEK-HIGH.
        CLEAR LT_PLANNED.
        LT_PLANNED-WEEKNO = WINDEX.
        LT_PLANNED-AUFNR  = LT_AUFK1-AUFNR.
        LT_PLANNED-AUART  = LT_AUFK1-AUART.
        LT_PLANNED-ILART  = LT_AFIH-ILART.
        LT_PLANNED-REL    = LT_JCDS-UDATE.
        LT_PLANNED-IDAT2  = LT_AUFK1-IDAT2.
        LT_PLANNED-IDAT3  = LT_AUFK1-IDAT3.
        LT_PLANNED-GLTRP  = LT_AFKO-GLTRP.
        LT_PLANNED-OBJNR  = LT_AUFK1-OBJNR.
        LT_PLANNED-BFD = LT_AFKO-GLTRP.
        TCOUNT = TCOUNT + 1.
        APPEND LT_PLANNED TO LT_PLANNED.
      ELSEIF LT_CDPOS2 IS NOT INITIAL AND LT_CDPOS2-VALUE_OLD BETWEEN LT_WEEK-LOW AND LT_WEEK-HIGH.
        CLEAR LT_PLANNED.
        LT_PLANNED-WEEKNO = WINDEX.
        LT_PLANNED-AUFNR  = LT_AUFK1-AUFNR.
        LT_PLANNED-AUART  = LT_AUFK1-AUART.
        LT_PLANNED-ILART  = LT_AFIH-ILART.
        LT_PLANNED-REL    = LT_JCDS-UDATE.
        LT_PLANNED-IDAT2  = LT_AUFK1-IDAT2.
        LT_PLANNED-IDAT3  = LT_AUFK1-IDAT3.
        LT_PLANNED-GLTRP  = LT_CDPOS2-VALUE_OLD.
        LT_PLANNED-OBJNR  = LT_AUFK1-OBJNR.
        LT_PLANNED-BFD = LT_AFKO2-GLTRP.
        TCOUNT = TCOUNT + 1.
        APPEND LT_PLANNED TO LT_PLANNED.

      ELSEIF LT_CDPOS IS NOT INITIAL AND LT_CDPOS-VALUE_NEW BETWEEN LT_WEEK-LOW AND LT_WEEK-HIGH.
        CLEAR LT_PLANNED.
        LT_PLANNED-WEEKNO = WINDEX.
        LT_PLANNED-AUFNR  = LT_AUFK1-AUFNR.
        LT_PLANNED-AUART  = LT_AUFK1-AUART.
        LT_PLANNED-ILART  = LT_AFIH-ILART.
        LT_PLANNED-REL    = LT_JCDS-UDATE.
        LT_PLANNED-IDAT2  = LT_AUFK1-IDAT2.
        LT_PLANNED-IDAT3  = LT_AUFK1-IDAT3.
        LT_PLANNED-GLTRP  = LT_CDPOS-VALUE_NEW.
        LT_PLANNED-OBJNR  = LT_AUFK1-OBJNR.
        LT_PLANNED-BFD = LT_AFKO2-GLTRP.
        APPEND LT_PLANNED TO LT_PLANNED.
        TCOUNT = TCOUNT + 1.
      ENDIF.
    ENDLOOP.

    LOOP AT LT_AUFK2.
      CLEAR: LT_AFKO, LT_CDHDR, LT_CDPOS, TIME, DATE, LT_PLANNED, LT_AFIH,LT_JCDS, LT_JCDS2.
      SELECT SINGLE * FROM AFIH INTO CORRESPONDING FIELDS OF LT_AFIH WHERE AUFNR = LT_AUFK2-AUFNR.
      SELECT * FROM JCDS INTO CORRESPONDING FIELDS OF TABLE LT_JCDS WHERE OBJNR = LT_AUFK2-OBJNR AND STAT IN ('I0045','I0046') AND INACT NE 'X'.
      SORT LT_JCDS DESCENDING BY UDATE UTIME.
      READ TABLE LT_JCDS INTO LT_JCDS2 WITH KEY STAT = 'I0045'.
      READ TABLE LT_JCDS INTO LT_JCDS WITH KEY STAT = 'I0046'.
      READ TABLE LT_PLANNED WITH KEY AUFNR = LT_AUFK2-AUFNR.

      SELECT * FROM JCDS INTO CORRESPONDING FIELDS OF TABLE LT_JCDS3 WHERE OBJNR = LT_AUFK2-OBJNR AND STAT = 'I0002' AND INACT NE 'X'.
      SORT LT_JCDS3 DESCENDING BY UDATE UTIME.
      READ TABLE LT_JCDS3 INDEX 1.

      IF LT_PLANNED IS NOT INITIAL.
        CLEAR LT_COMPLETED.
        IF LT_JCDS2 IS NOT INITIAL AND LT_JCDS2-UDATE <= LT_PLANNED-GLTRP AND LT_PLANNED-GLTRP BETWEEN LT_WEEK-LOW AND LT_WEEK-HIGH.
          LT_COMPLETED-WEEKNO = WINDEX.
          LT_COMPLETED-AUFNR  = LT_AUFK2-AUFNR.
          LT_COMPLETED-AUART  = LT_AUFK2-AUART.
          LT_COMPLETED-ILART  = LT_AFIH-ILART.
          LT_COMPLETED-REL    = LT_JCDS3-UDATE.
          LT_COMPLETED-IDAT2  = LT_AUFK2-IDAT2.
          LT_COMPLETED-IDAT3  = LT_AUFK2-IDAT3.
          LT_COMPLETED-GLTRP  = LT_PLANNED-GLTRP.
          LT_COMPLETED-OBJNR  = LT_AUFK2-OBJNR.
          LT_COMPLETED-BFD = LT_PLANNED-BFD.
          APPEND LT_COMPLETED TO LT_COMPLETED.
          CCOUNT = CCOUNT + 1.

        ELSEIF LT_JCDS IS NOT INITIAL AND LT_JCDS-UDATE <= LT_PLANNED-GLTRP AND LT_PLANNED-GLTRP BETWEEN LT_WEEK-LOW AND LT_WEEK-HIGH.
          LT_COMPLETED-WEEKNO = WINDEX.
          LT_COMPLETED-AUFNR  = LT_AUFK2-AUFNR.
          LT_COMPLETED-AUART  = LT_AUFK2-AUART.
          LT_COMPLETED-ILART  = LT_AFIH-ILART.
          LT_COMPLETED-REL    = LT_JCDS3-UDATE.
          LT_COMPLETED-IDAT2  = LT_AUFK2-IDAT2.
          LT_COMPLETED-IDAT3  = LT_AUFK2-IDAT3.
          LT_COMPLETED-GLTRP  = LT_PLANNED-GLTRP.
          LT_COMPLETED-OBJNR  = LT_AUFK2-OBJNR.
          LT_COMPLETED-BFD = LT_PLANNED-BFD.
          APPEND LT_COMPLETED TO LT_COMPLETED.
          CCOUNT = CCOUNT + 1.
        ENDIF.
      ENDIF.
    ENDLOOP.
    DATA: MONTHS  TYPE T247-LTX.
    SELECT SINGLE LTX INTO MONTHS FROM T247 WHERE SPRAS EQ 'EN' AND MNR EQ P_MONTH.
    CONCATENATE 'Week' ' ' WINDEX ' ' 'of' ' ' MONTHS ' ' P_YEAR INTO LT_FINAL-WEEK RESPECTING BLANKS.
    LT_FINAL-WEEKNO = WINDEX.
    LT_FINAL-COMP = CCOUNT.
    LT_FINAL-TOTAL = TCOUNT.
    IF LT_FINAL-COMP = 0 OR LT_FINAL-TOTAL = 0.
      LT_FINAL-LC = 0.
    ELSE.
      LT_FINAL-LC = ( CCOUNT / TCOUNT ) * 100.
    ENDIF.
    APPEND LT_FINAL TO LT_FINAL.
    WINDEX = WINDEX + 1.
  ENDLOOP.

  IF P_WEEK NE 0.
    READ TABLE LT_FINAL INDEX P_WEEK.
    APPEND LT_FINAL TO LT_FINAL2.
  ELSE.
    LOOP AT LT_FINAL.
      APPEND LT_FINAL TO LT_FINAL2.
    ENDLOOP.
  ENDIF.

ENDFORM.                    " DATA_RETRIEVAL

*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELDCATALOG
*&---------------------------------------------------------------------*
*       Build Fieldcatalog for ALV Report
*----------------------------------------------------------------------*
FORM BUILD_FIELDCATALOG.
  FIELDCATALOG-FIELDNAME   = 'WEEK'.
  FIELDCATALOG-SELTEXT_L   = 'Week'.
  FIELDCATALOG-COL_POS     = 0.
  FIELDCATALOG-JUST        = 'C'.
*  FIELDCATALOG-HOTSPOT   = 'X'.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'COMP'.
  FIELDCATALOG-SELTEXT_L   = 'Completed ZPMS Legislative Work Orders'.
  FIELDCATALOG-COL_POS     = 1.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-HOTSPOT   = 'X'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'TOTAL'.
  FIELDCATALOG-SELTEXT_L   = 'Total ZPMS Legislative Work Orders'.
  FIELDCATALOG-COL_POS     = 2.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-HOTSPOT   = 'X'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'LC'.
  FIELDCATALOG-SELTEXT_L   = 'Legislative Compliance'.
  FIELDCATALOG-COL_POS     = 3.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-EDIT_MASK        = '_____%'.
  FIELDCATALOG-HOTSPOT   = 'X'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG2-FIELDNAME   = 'AUFNR'.
  FIELDCATALOG2-SELTEXT_L   = 'Work Order Number'.
  FIELDCATALOG2-COL_POS     = 0.
  FIELDCATALOG2-JUST        = 'C'.
  FIELDCATALOG2-HOTSPOT   = 'X'.
  FIELDCATALOG2-EMPHASIZE   = 'X'.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'AUART'.
  FIELDCATALOG2-SELTEXT_L   = 'Work Order Type'.
  FIELDCATALOG2-COL_POS     = 1.
  FIELDCATALOG2-JUST        = 'C'.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'ILART'.
  FIELDCATALOG2-SELTEXT_L   = 'Activity Type'.
  FIELDCATALOG2-COL_POS     = 2.
  FIELDCATALOG2-JUST        = 'C'.

  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'STTXT'.
  FIELDCATALOG2-SELTEXT_L   = 'System Status'.
  FIELDCATALOG2-COL_POS     = 3.
  FIELDCATALOG2-JUST        = 'L'.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'REL'.
  FIELDCATALOG2-SELTEXT_L   = 'Release Date'.
  FIELDCATALOG2-JUST        = 'C'.
  FIELDCATALOG2-COL_POS     = 4.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'IDAT2'.
  FIELDCATALOG2-SELTEXT_L   = 'Technical Completion'.
  FIELDCATALOG2-JUST        = 'C'.
  FIELDCATALOG2-COL_POS     = 5.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'IDAT3'.
  FIELDCATALOG2-SELTEXT_L   = 'Closed Date'.
  FIELDCATALOG2-JUST        = 'C'.
  FIELDCATALOG2-COL_POS     = 6.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.


  FIELDCATALOG2-FIELDNAME   = 'GLTRP'.
  FIELDCATALOG2-SELTEXT_L   = 'Basic Finish Date during release'.
  FIELDCATALOG2-JUST        = 'C'.
  FIELDCATALOG2-COL_POS     = 7.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'BFD'.
  FIELDCATALOG2-SELTEXT_L   = 'Latest Basic Finish Date'.
  FIELDCATALOG2-JUST        = 'C'.
  FIELDCATALOG2-COL_POS     = 8.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.



ENDFORM.                    " BUILD_FIELDCATALOG


*&---------------------------------------------------------------------*
*&      Form  BUILD_LAYOUT
*&---------------------------------------------------------------------*
*       Build layout for ALV grid report
*----------------------------------------------------------------------*
FORM BUILD_LAYOUT.
  GD_LAYOUT-NO_INPUT          = 'X'.
  GD_LAYOUT-COLWIDTH_OPTIMIZE = 'X'.
  GD_LAYOUT2-NO_INPUT          = 'X'.
  GD_LAYOUT2-COLWIDTH_OPTIMIZE = 'X'.
ENDFORM.                    " BUILD_LAYOUT
" BUILD_PRINT_PARAMS


*&---------------------------------------------------------------------*
*&      Form  END_OF_PAGE
*&---------------------------------------------------------------------*
FORM END_OF_PAGE.
  DATA: LISTWIDTH      TYPE I,
        LD_PAGEPOS(10) TYPE C,
        LD_PAGE(10)    TYPE C.

  WRITE: SY-ULINE(50).
  SKIP.
  WRITE:/40 'Page:', SY-PAGNO .
ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  END_OF_LIST
*&---------------------------------------------------------------------*
FORM END_OF_LIST.

ENDFORM.

FORM USER_DROP_DOWN_LIST_FORDT.
  DATA: NAME  TYPE VRM_ID,
        LIST  TYPE VRM_VALUES,
        VALUE LIKE LINE OF LIST.
  DATA: T_MONTHS TYPE T247 OCCURS 0 WITH HEADER LINE.
  CLEAR LIST. REFRESH LIST.
  NAME = 'P_MONTH'.
  SELECT * INTO TABLE T_MONTHS
  FROM T247 WHERE SPRAS EQ 'EN'.
  SORT T_MONTHS ASCENDING BY MNR.
  LOOP AT T_MONTHS.
    CLEAR VALUE.
    VALUE-KEY = T_MONTHS-MNR.
    VALUE-TEXT = T_MONTHS-LTX.
    APPEND VALUE TO LIST.
    P_MONTH = '01'.
  ENDLOOP.

  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID     = NAME
      VALUES = LIST.
ENDFORM.

FORM USER_DROP_DOWN_LIST_FORYR.
  DATA: NAME  TYPE VRM_ID,
        LIST  TYPE VRM_VALUES,
        VALUE LIKE LINE OF LIST.
  CLEAR LIST. REFRESH LIST.
  NAME = 'P_YEAR'.
  DO 100 TIMES.
    CLEAR VALUE.
    VALUE-KEY = 2000 + SY-INDEX.
    APPEND VALUE TO LIST.
  ENDDO.

  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID     = NAME
      VALUES = LIST.
  P_YEAR = '2022'.
ENDFORM.

FORM USER_DROP_DOWN_LIST_FORWK.
  DATA: NAME  TYPE VRM_ID,
        LIST  TYPE VRM_VALUES,
        VALUE LIKE LINE OF LIST.
  CLEAR LIST. REFRESH LIST.
  NAME = 'P_WEEK'.
  DO 5 TIMES.
    CLEAR VALUE.
    VALUE-KEY = SY-INDEX.
    CONCATENATE 'Week' SPACE VALUE-KEY INTO VALUE-TEXT RESPECTING BLANKS.
    APPEND VALUE TO LIST.
  ENDDO.
  CLEAR VALUE.
  VALUE-KEY = '0'.
  VALUE-TEXT = 'ALL'.
  APPEND VALUE TO LIST.
  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID     = NAME
      VALUES = LIST.
  P_WEEK = '0'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_WEEKS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_WEEKS .
  DATA: PAR_MONTH LIKE  T009B-BUMON,
        PAR_YEAR  LIKE  T009B-BDATJ,
        PAR_DAYS  LIKE  T009B-BUTAG,
        SDATE     LIKE SY-DATUM,
        LDATE     LIKE SY-DATUM,
        TEMPD     TYPE SY-DATUM.

  PAR_MONTH = P_MONTH.
  PAR_YEAR = P_YEAR.
  CALL FUNCTION 'NUMBER_OF_DAYS_PER_MONTH_GET'
    EXPORTING
      PAR_MONTH = PAR_MONTH
      PAR_YEAR  = PAR_YEAR
    IMPORTING
      PAR_DAYS  = PAR_DAYS.
  DD = PAR_DAYS.
  CONCATENATE PAR_YEAR PAR_MONTH '01' INTO DATE1.
  CALL FUNCTION 'DATE_GET_WEEK'
    EXPORTING
      DATE = DATE1
    IMPORTING
      WEEK = WEEK1.
  CONCATENATE PAR_YEAR PAR_MONTH PAR_DAYS INTO DATE2.
  CALL FUNCTION 'DATE_GET_WEEK'
    EXPORTING
      DATE = DATE2
    IMPORTING
      WEEK = WEEK2.

  IF WEEK1+0(4) LT P_YEAR.
    CONCATENATE P_YEAR '01' INTO WEEK1.
  ENDIF.
  SWEEK = WEEK1+4(2).
  EWEEK = WEEK2+4(2).

  LOOPS = EWEEK - SWEEK.
  LOOPS = LOOPS + 1.
  DO LOOPS TIMES.
    CALL FUNCTION 'WEEK_GET_FIRST_DAY'
      EXPORTING
        WEEK = WEEK1
      IMPORTING
        DATE = SDATE.
    TEMP_WEEK = WEEK1 + 1.
    CALL FUNCTION 'WEEK_GET_FIRST_DAY'
      EXPORTING
        WEEK = TEMP_WEEK
      IMPORTING
        DATE = LDATE.
    LDATE = LDATE - 1.
    DATA: TDATE TYPE SY-DATUM,
          DAY   TYPE DTRESR-WEEKDAY.
    TEMPD = '0'.
    IF SDATE LT DATE1.
      SDATE = DATE1.
      TDATE = SDATE.
      WHILE TDATE <= LDATE.
        CALL FUNCTION 'DATE_TO_DAY'
          EXPORTING
            DATE    = TDATE
          IMPORTING
            WEEKDAY = DAY.
        IF DAY = 'Sunday'.
          TEMPD = '1'.
        ENDIF.
        TDATE = TDATE + 1.
      ENDWHILE.
      CLEAR TDATE.
    ELSEIF LDATE >= DATE2.
      LDATE = DATE2.
      TDATE = SDATE.
      WHILE TDATE <= LDATE.
        CALL FUNCTION 'DATE_TO_DAY'
          EXPORTING
            DATE    = TDATE
          IMPORTING
            WEEKDAY = DAY.
        IF DAY = 'Sunday'.
          TEMPD = '1'.
        ENDIF.
        TDATE = TDATE + 1.
      ENDWHILE.
      CLEAR TDATE.
    ENDIF.

    LT_WEEK-SIGN = 'I'.
    LT_WEEK-OPTION = 'BT'.
    LT_WEEK-LOW = SDATE.
    LT_WEEK-HIGH = LDATE.
    LT_WEEK-WEEK = SY-INDEX.
    IF LDATE EQ SDATE.
      LT_WEEK-WCOUNT = 1 - TEMPD.
    ELSE.
      LT_WEEK-WCOUNT = LDATE - SDATE - TEMPD.
    ENDIF.
    APPEND LT_WEEK TO LT_WEEK.
    CLEAR TEMPD.
    WEEK1 = WEEK1 + 1.
  ENDDO.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_REPORT
*&---------------------------------------------------------------------*
*       Display report using ALV grid
*----------------------------------------------------------------------*
FORM DISPLAY_ALV_REPORT.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM      = SY-REPID
      I_CALLBACK_USER_COMMAND = 'USER_COMMAND'
      IS_LAYOUT               = GD_LAYOUT
      IT_FIELDCAT             = FIELDCATALOG[]
    TABLES
      T_OUTTAB                = LT_FINAL2
    EXCEPTIONS
      PROGRAM_ERROR           = 1
      OTHERS                  = 2.
  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
ENDFORM.                    " DISPLAY_ALV_REPORT



FORM USER_COMMAND USING R_UCOMM TYPE SY-UCOMM
      RS_SELFIELD TYPE SLIS_SELFIELD.

  CASE R_UCOMM.
    WHEN '&IC1'.
      IF RS_SELFIELD-SEL_TAB_FIELD EQ '1-TOTAL'.
        READ TABLE LT_FINAL2 INDEX RS_SELFIELD-TABINDEX INTO WA_FINAL.
        IF SY-SUBRC = 0.
          LOOP AT LT_PLANNED.
            IF LT_PLANNED-WEEKNO = WA_FINAL-WEEKNO.
              LT_SUBLIST-AUFNR = LT_PLANNED-AUFNR.
              LT_SUBLIST-AUART = LT_PLANNED-AUART.
              LT_SUBLIST-ILART  = LT_PLANNED-ILART.
              SELECT SINGLE ILART FROM AFIH INTO LT_SUBLIST-ILART WHERE AUFNR = LT_PLANNED-AUFNR.
              CALL FUNCTION 'STATUS_TEXT_EDIT'
                EXPORTING
                  CLIENT        = SY-MANDT
                  FLG_USER_STAT = 'X'
                  OBJNR         = LT_PLANNED-OBJNR
                  ONLY_ACTIVE   = 'X'
                  SPRAS         = SY-LANGU
*                 BYPASS_BUFFER = ' '
                IMPORTING
*                 ANW_STAT_EXISTING       =
*                 E_STSMA       =
                  LINE          = LT_SUBLIST-STTXT
*                 USER_LINE     =
*                 STONR         =
*               EXCEPTIONS
*                 OBJECT_NOT_FOUND        = 1
*                 OTHERS        = 2
                .
              LT_SUBLIST-REL = LT_PLANNED-REL.
              LT_SUBLIST-IDAT2 = LT_PLANNED-IDAT2.
              LT_SUBLIST-IDAT3 = LT_PLANNED-IDAT3.
              LT_SUBLIST-GLTRP = LT_PLANNED-GLTRP.
              LT_SUBLIST-BFD = LT_PLANNED-BFD.
              APPEND LT_SUBLIST TO LT_SUBLIST.
            ENDIF.
          ENDLOOP.
          PERFORM DISPLAYALV2.
        ENDIF.
      ENDIF.
      IF RS_SELFIELD-SEL_TAB_FIELD EQ '1-COMP'.
        READ TABLE LT_FINAL2 INDEX RS_SELFIELD-TABINDEX INTO WA_FINAL.
        IF WA_FINAL IS NOT INITIAL.
          LOOP AT LT_COMPLETED.
            IF LT_COMPLETED-WEEKNO = WA_FINAL-WEEKNO.
              LT_SUBLIST-AUFNR = LT_COMPLETED-AUFNR.
              LT_SUBLIST-AUART = LT_COMPLETED-AUART.
              SELECT SINGLE ILART FROM AFIH INTO LT_SUBLIST-ILART WHERE AUFNR = LT_COMPLETED-AUFNR.
              CALL FUNCTION 'STATUS_TEXT_EDIT'
                EXPORTING
                  CLIENT        = SY-MANDT
                  FLG_USER_STAT = 'X'
                  OBJNR         = LT_COMPLETED-OBJNR
                  ONLY_ACTIVE   = 'X'
                  SPRAS         = SY-LANGU
*                 BYPASS_BUFFER = ' '
                IMPORTING
*                 ANW_STAT_EXISTING       =
*                 E_STSMA       =
                  LINE          = LT_SUBLIST-STTXT
*                 USER_LINE     =
*                 STONR         =
*               EXCEPTIONS
*                 OBJECT_NOT_FOUND        = 1
*                 OTHERS        = 2
                .
              LT_SUBLIST-REL = LT_COMPLETED-REL.
              LT_SUBLIST-IDAT2 = LT_COMPLETED-IDAT2.
              LT_SUBLIST-IDAT3 = LT_COMPLETED-IDAT3.
              LT_SUBLIST-GLTRP = LT_COMPLETED-GLTRP.
              LT_SUBLIST-BFD = LT_COMPLETED-BFD.
              APPEND LT_SUBLIST TO LT_SUBLIST.
            ENDIF.
          ENDLOOP.
          PERFORM DISPLAYALV2.
        ELSE.
          MESSAGE 'No Data Found' TYPE 'S'.
        ENDIF.

      ENDIF.
      IF RS_SELFIELD-SEL_TAB_FIELD EQ '1-AUFNR'.
        READ TABLE LT_SUBLIST INDEX RS_SELFIELD-TABINDEX.
        SET PARAMETER ID 'ANR' FIELD LT_SUBLIST-AUFNR.
        CALL TRANSACTION 'IW33' AND SKIP FIRST SCREEN .
        CLEAR LT_SUBLIST.
      ENDIF.

  ENDCASE.

ENDFORM.




*&---------------------------------------------------------------------*
*&      Form  DISPLAYALV2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAYALV2 .
  G_VARIANT-REPORT = SY-REPID.
*  LAYOUT = '/MIN'.
*  G_VARIANT-VARIANT = LAYOUT.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM      = SY-REPID
      I_CALLBACK_USER_COMMAND = 'USER_COMMAND'
*     i_grid_title            = outtext
      IS_LAYOUT               = GD_LAYOUT2
      IT_FIELDCAT             = FIELDCATALOG2[]
*     it_special_groups       = gd_tabgroup
      IT_EVENTS               = GT_EVENTS
      IS_PRINT                = GD_PRNTPARAMS
      I_SAVE                  = 'X'
    TABLES
      T_OUTTAB                = LT_SUBLIST
    EXCEPTIONS
      PROGRAM_ERROR           = 1
      OTHERS                  = 2.
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
  REFRESH LT_SUBLIST.
ENDFORM.
