*&---------------------------------------------------------------------*
*Program Name / Enhancement Name : ZR_PM_KPIREPORT_TEST
*TCode
*Description
*CR Number
*Package
*Date of V=Creation
*TR
*Func Consultant
*Tech Consultant
*&---------------------------------------------------------------------*
REPORT ZR_PM_KPIREPORT_TEST.
INCLUDE ZINIT_MAIN_TEST.

INITIALIZATION.
  T1 = 'Plant'.
  T2 = 'Period'.
  T3 = 'Week'.
  PERFORM USER_DROP_DOWN_LIST_FORDT.
  PERFORM USER_DROP_DOWN_LIST_FORYR.
  PERFORM USER_DROP_DOWN_LIST_FORWK.

************************************************************************
*Start-of-selection.
START-OF-SELECTION.

  PERFORM DATA_RETRIEVAL.
  PERFORM BUILD_FIELDCATALOG.
  PERFORM BUILD_LAYOUT.
  PERFORM BUILD_EVENTS.
  PERFORM BUILD_PRINT_PARAMS.
  PERFORM DISPLAY_ALV_REPORT.

*&---------------------------------------------------------------------*
*&      Form  DATA_RETRIEVAL
*&---------------------------------------------------------------------*
*       Retrieve data form EKPO table and populate itab it_ekko
*----------------------------------------------------------------------*
FORM DATA_RETRIEVAL.

  PERFORM GET_WEEKS.

  DATA : INDEX(4)  TYPE C,
         MONTH(10) TYPE C,
         KEY(30)   TYPE C,
         YDF       TYPE SY-DATUM,
         YDL       TYPE SY-DATUM,
         DATE      TYPE CHAR10,
         TIME      TYPE CHAR8
         "FLGG      TYPE CHAR1
         .

  CONCATENATE P_YEAR '01' '01' INTO YDF.
  CONCATENATE P_YEAR '12' '31' INTO YDL.
  "GET ALL WORK ORDERS
  SELECT * FROM AUFK INTO CORRESPONDING FIELDS OF TABLE LT_AUFK WHERE WERKS EQ P_PLANT AND AUTYP EQ '30' AND AUART IN ('ZPMS','ZPMR','ZPMM') AND ERDAT BETWEEN YDF AND YDL.

  LOOP AT LT_AUFK.
    SELECT * FROM JEST INTO CORRESPONDING FIELDS OF TABLE LT_JEST WHERE OBJNR = LT_AUFK-OBJNR.
    LOOP AT LT_JEST.
      IF LT_JEST-STAT EQ 'I0076' AND LT_JEST-INACT NE 'X'.
        DELETE LT_AUFK WHERE OBJNR = LT_JEST-OBJNR.
      ENDIF.
    ENDLOOP.
  ENDLOOP.

  LOOP AT LT_AUFK.

    SELECT * FROM JEST INTO CORRESPONDING FIELDS OF TABLE LT_JEST WHERE OBJNR = LT_AUFK-OBJNR.
    LOOP AT LT_JEST.
      IF LT_JEST-INACT NE 'X' AND LT_JEST-STAT EQ 'I0002' OR LT_JEST-STAT EQ 'I0009' OR LT_JEST-STAT EQ 'I0010' OR LT_JEST-STAT EQ 'I0045' OR LT_JEST-STAT EQ 'I0046'.
        READ TABLE LT_AUFK1 WITH KEY AUFNR = LT_AUFK-AUFNR.
        IF LT_AUFK1-AUFNR NE LT_AUFK-AUFNR.
          APPEND LT_AUFK TO LT_AUFK1.
        ENDIF.
      ENDIF.
    ENDLOOP.
  ENDLOOP.

  LOOP AT LT_AUFK1.
    SELECT * FROM JEST INTO CORRESPONDING FIELDS OF TABLE LT_JEST WHERE OBJNR = LT_AUFK-OBJNR.
    LOOP AT LT_JEST.
      IF LT_JEST-INACT NE 'X' AND LT_JEST-STAT EQ 'I0045' OR LT_JEST-STAT EQ 'I0046'.
        READ TABLE LT_AUFK2 WITH KEY AUFNR = LT_AUFK-AUFNR.
        IF LT_AUFK2-AUFNR NE LT_AUFK-AUFNR.
          APPEND LT_AUFK TO LT_AUFK2.
        ENDIF.
      ENDIF.
    ENDLOOP.
  ENDLOOP.


  DATA: WINDEX TYPE SY-INDEX.
  WINDEX = 1.

  LOOP AT LT_WEEK.

    LOOP AT LT_AUFK1.
      CLEAR: LT_AFKO, LT_CDHDR, LT_CDPOS, TIME, DATE, LT_PLANNED, LT_AFIH.
      SELECT SINGLE * FROM AFIH INTO CORRESPONDING FIELDS OF LT_AFIH WHERE AUFNR = LT_AUFK1-AUFNR.
      SELECT * FROM JCDS INTO CORRESPONDING FIELDS OF TABLE LT_JCDS WHERE OBJNR = LT_AUFK1-OBJNR AND STAT = 'I0002' AND INACT NE 'X'.
      SORT LT_JCDS DESCENDING BY UDATE UTIME.
      READ TABLE LT_JCDS INDEX 1.
      CLEAR KEY.
      CONCATENATE SY-MANDT LT_AUFK1-AUTYP LT_AUFK1-AUFNR INTO KEY.
      SELECT SINGLE * FROM CDPOS INTO CORRESPONDING FIELDS OF LT_CDPOS WHERE OBJECTID = KEY AND TABNAME = 'AFKO' AND FNAME = 'GLTRP'.

      IF LT_CDPOS IS NOT INITIAL.
        CONCATENATE   LT_JCDS-UDATE+6(2) '.' LT_JCDS-UDATE+4(2) '.'LT_JCDS-UDATE+0(4) INTO DATE.
        CONCATENATE LT_JCDS-UTIME+0(2) '.' LT_JCDS-UTIME+2(2) '.' LT_JCDS-UTIME+4(2) INTO TIME.
        SELECT * FROM CDHDR INTO CORRESPONDING FIELDS OF TABLE LT_CDHDR WHERE CHANGENR = LT_CDPOS-CHANGENR AND UDATE <= DATE AND UTIME <= TIME.
        SORT LT_CDHDR DESCENDING BY UDATE UTIME.
        READ TABLE LT_CDHDR INDEX 1.

      ELSE.
        SELECT SINGLE * FROM AFKO INTO CORRESPONDING FIELDS OF LT_AFKO WHERE AUFNR = LT_AUFK1-AUFNR.
      ENDIF.

      IF LT_AFKO IS NOT INITIAL AND LT_AFKO-GLTRP BETWEEN LT_WEEK-LOW AND LT_WEEK-HIGH.
        CLEAR LT_PLANNED.
        LT_PLANNED-WEEKNO = WINDEX.
        LT_PLANNED-AUFNR  = LT_AUFK1-AUFNR.
        LT_PLANNED-AUART  = LT_AUFK1-AUART.
        LT_PLANNED-ILART  = LT_AFIH-ILART.
        LT_PLANNED-REL    = LT_JCDS-UDATE.
        LT_PLANNED-IDAT2  = LT_AUFK1-IDAT2.
        LT_PLANNED-IDAT3  = LT_AUFK1-IDAT3.
        LT_PLANNED-GLTRP  = LT_AFKO-GLTRP.
        LT_PLANNED-OBJNR  = LT_AUFK1-OBJNR.
        LT_PLANNED-BFD = LT_AFKO-GLTRP.
        APPEND LT_PLANNED TO LT_PLANNED.

      ELSEIF LT_CDHDR IS NOT INITIAL AND LT_CDHDR-UDATE BETWEEN LT_WEEK-LOW AND LT_WEEK-HIGH.
        CLEAR LT_PLANNED.
        LT_PLANNED-WEEKNO = WINDEX.
        LT_PLANNED-AUFNR  = LT_AUFK1-AUFNR.
        LT_PLANNED-AUART  = LT_AUFK1-AUART.
        LT_PLANNED-ILART  = LT_AFIH-ILART.
        LT_PLANNED-REL    = LT_JCDS-UDATE.
        LT_PLANNED-IDAT2  = LT_AUFK1-IDAT2.
        LT_PLANNED-IDAT3  = LT_AUFK1-IDAT3.
        LT_PLANNED-GLTRP  = LT_CDHDR-UDATE.
        LT_PLANNED-OBJNR  = LT_AUFK1-OBJNR.
        LT_PLANNED-BFD = LT_CDHDR-UDATE.
        APPEND LT_PLANNED TO LT_PLANNED.
      ENDIF.
    ENDLOOP.

    LOOP AT LT_AUFK2.
      CLEAR: LT_AFKO, LT_CDHDR, LT_CDPOS, TIME, DATE, LT_PLANNED, LT_AFIH.
      SELECT SINGLE * FROM AFIH INTO CORRESPONDING FIELDS OF LT_AFIH WHERE AUFNR = LT_AUFK2-AUFNR.
      SELECT * FROM JCDS INTO CORRESPONDING FIELDS OF TABLE LT_JCDS WHERE OBJNR = LT_AUFK2-OBJNR AND STAT IN ('I0045','I0046') AND INACT NE 'X'.
      SORT LT_JCDS DESCENDING BY UDATE UTIME.
      READ TABLE LT_JCDS WITH KEY STAT = 'I0045'.
      LT_JCDS2 = LT_JCDS.
      CLEAR LT_JCDS.
      READ TABLE LT_JCDS WITH KEY STAT = 'I0046'.

      READ TABLE LT_PLANNED WITH KEY AUFNR = LT_AUFK2-AUFNR.

      SELECT * FROM JCDS INTO CORRESPONDING FIELDS OF TABLE LT_JCDS3 WHERE OBJNR = LT_AUFK2-OBJNR AND STAT = 'I0002' AND INACT NE 'X'.
      SORT LT_JCDS3 DESCENDING BY UDATE UTIME.
      READ TABLE LT_JCDS3 INDEX 1.

      IF LT_PLANNED IS NOT INITIAL.


        IF LT_JCDS2 IS NOT INITIAL AND LT_JCDS2-UDATE <= LT_PLANNED-BFD AND LT_JCDS2-UDATE BETWEEN LT_WEEK-LOW AND LT_WEEK-HIGH.
          CLEAR LT_COMPLETED.
          LT_COMPLETED-WEEKNO = WINDEX.
          LT_COMPLETED-AUFNR  = LT_AUFK2-AUFNR.
          LT_COMPLETED-AUART  = LT_AUFK2-AUART.
          LT_COMPLETED-ILART  = LT_AFIH-ILART.
          LT_COMPLETED-REL    = LT_JCDS3-UDATE.
          LT_COMPLETED-IDAT2  = LT_AUFK2-IDAT2.
          LT_COMPLETED-IDAT3  = LT_AUFK2-IDAT3.
          LT_COMPLETED-GLTRP  = LT_PLANNED-GLTRP.
          LT_COMPLETED-OBJNR  = LT_AUFK2-OBJNR.
          LT_COMPLETED-BFD = LT_PLANNED-BFD.
          APPEND LT_COMPLETED TO LT_COMPLETED.

        ELSEIF LT_JCDS IS NOT INITIAL AND LT_JCDS-UDATE <= LT_PLANNED-BFD AND LT_JCDS-UDATE BETWEEN LT_WEEK-LOW AND LT_WEEK-HIGH.
          CLEAR LT_COMPLETED.
          LT_COMPLETED-WEEKNO = WINDEX.
          LT_COMPLETED-AUFNR  = LT_AUFK2-AUFNR.
          LT_COMPLETED-AUART  = LT_AUFK2-AUART.
          LT_COMPLETED-ILART  = LT_AFIH-ILART.
          LT_COMPLETED-REL    = LT_JCDS3-UDATE.
          LT_COMPLETED-IDAT2  = LT_AUFK2-IDAT2.
          LT_COMPLETED-IDAT3  = LT_AUFK2-IDAT3.
          LT_COMPLETED-GLTRP  = LT_PLANNED-GLTRP.
          LT_COMPLETED-OBJNR  = LT_AUFK2-OBJNR.
          LT_COMPLETED-BFD = LT_PLANNED-BFD.
          APPEND LT_COMPLETED TO LT_COMPLETED.
        ENDIF.

      ENDIF.
    ENDLOOP.


    CLEAR: PCOUNT, LT_FINAL.
    LOOP AT LT_PLANNED WHERE WEEKNO = WINDEX.
      CLEAR LT_AFVV.
      SELECT * FROM AFKO INTO CORRESPONDING FIELDS OF TABLE LT_AFKO WHERE AUFNR = LT_PLANNED-AUFNR.
      SELECT * FROM AFVV INTO CORRESPONDING FIELDS OF TABLE LT_AFVV FOR ALL ENTRIES IN LT_AFKO WHERE AUFPL = LT_AFKO-AUFPL.
      LOOP AT LT_AFVV.
        LT_FINAL-P_CRAFT_TIME = LT_FINAL-P_CRAFT_TIME + LT_AFVV-ARBEI.
        LT_FINAL-A_CRAFT_TIME = LT_FINAL-A_CRAFT_TIME + LT_AFVV-ISMNW.
        CLEAR: LT_AFVV-ARBEI,LT_AFVV-ISMNW.
      ENDLOOP.

      IF LT_PLANNED-AUART EQ 'ZPMS'.
        IF LT_PLANNED-ILART NE '5S' AND LT_PLANNED-ILART NE 'RCA' AND LT_PLANNED-ILART NE 'PRJ' AND LT_PLANNED-ILART NE 'TRA' AND LT_PLANNED-ILART NE 'CHG'.
          SELECT * FROM AFKO INTO CORRESPONDING FIELDS OF TABLE LT_AFKO1 WHERE AUFNR = LT_PLANNED-AUFNR.
          SELECT * FROM AFVV INTO CORRESPONDING FIELDS OF TABLE LT_AFVV1 FOR ALL ENTRIES IN LT_AFKO1 WHERE AUFPL = LT_AFKO1-AUFPL.
          LOOP AT LT_AFVV1.
            LT_FINAL-PLANNED_PM = LT_FINAL-PLANNED_PM + LT_AFVV1-ARBEI.
            LT_FINAL-ACTUAL_PM = LT_FINAL-ACTUAL_PM + LT_AFVV1-ISMNW.
            CLEAR: LT_AFVV1-ARBEI, LT_AFVV1-ISMNW.
          ENDLOOP.
        ENDIF.

      ELSEIF LT_PLANNED-AUART EQ 'ZPMR'.
        IF LT_PLANNED-ILART NE '5S' AND LT_PLANNED-ILART NE 'RCA' AND LT_PLANNED-ILART NE 'PRJ' AND LT_PLANNED-ILART NE 'TRA' AND LT_PLANNED-ILART NE 'CHG'.
          SELECT * FROM AFKO INTO CORRESPONDING FIELDS OF TABLE LT_AFKO2 WHERE AUFNR = LT_PLANNED-AUFNR.
          SELECT * FROM AFVV INTO CORRESPONDING FIELDS OF TABLE LT_AFVV2 FOR ALL ENTRIES IN LT_AFKO2 WHERE AUFPL = LT_AFKO2-AUFPL.
          LOOP AT LT_AFVV2.
            LT_FINAL-UNPLANNED_BM = LT_FINAL-UNPLANNED_BM + LT_AFVV2-ARBEI.
            LT_FINAL-ACTUAL_BM = LT_FINAL-ACTUAL_BM + LT_AFVV2-ISMNW.
            CLEAR: LT_AFVV2-ARBEI, LT_AFVV2-ISMNW.
          ENDLOOP.
        ENDIF.

      ELSEIF LT_PLANNED-AUART EQ 'ZPMM'.
        IF LT_PLANNED-ILART NE '5S' AND LT_PLANNED-ILART NE 'RCA' AND LT_PLANNED-ILART NE 'PRJ' AND LT_PLANNED-ILART NE 'TRA' AND LT_PLANNED-ILART NE 'CHG'.
          SELECT * FROM AFKO INTO CORRESPONDING FIELDS OF TABLE LT_AFKO3 WHERE AUFNR = LT_PLANNED-AUFNR.
          SELECT * FROM AFVV INTO CORRESPONDING FIELDS OF TABLE LT_AFVV3 FOR ALL ENTRIES IN LT_AFKO3 WHERE AUFPL = LT_AFKO3-AUFPL.
          LOOP AT LT_AFVV3.
            LT_FINAL-PLANNED_CM = LT_FINAL-PLANNED_CM + LT_AFVV3-ARBEI.
            LT_FINAL-ACTUAL_CM = LT_FINAL-ACTUAL_CM + LT_AFVV3-ISMNW.
            CLEAR: LT_AFVV3-ARBEI, LT_AFVV3-ISMNW.
          ENDLOOP.
        ENDIF.
      ENDIF.


      IF LT_PLANNED-ILART = 'CHG'.
        SELECT * FROM AFKO INTO CORRESPONDING FIELDS OF TABLE LT_AFKO4 WHERE AUFNR = LT_PLANNED-AUFNR.
        SELECT * FROM AFVV INTO CORRESPONDING FIELDS OF TABLE LT_AFVV4 FOR ALL ENTRIES IN LT_AFKO4 WHERE AUFPL = LT_AFKO4-AUFPL.
        LOOP AT LT_AFVV4.
          LT_FINAL-PLANNED_CNGOVER = LT_FINAL-PLANNED_CNGOVER + LT_AFVV4-ARBEI.
          LT_FINAL-ACTUAL_CNGOVER = LT_FINAL-ACTUAL_CNGOVER + LT_AFVV4-ISMNW.
          CLEAR: LT_AFVV4-ARBEI, LT_AFVV4-ISMNW.
        ENDLOOP.

      ELSEIF LT_PLANNED-ILART EQ '5S' OR LT_PLANNED-ILART EQ 'RCA' OR LT_PLANNED-ILART EQ 'PRJ' OR LT_PLANNED-ILART EQ 'TRA'.
        SELECT * FROM AFKO INTO CORRESPONDING FIELDS OF TABLE LT_AFKO5 WHERE AUFNR = LT_AUFK-AUFNR.
        SELECT * FROM AFVV INTO CORRESPONDING FIELDS OF TABLE LT_AFVV5 FOR ALL ENTRIES IN LT_AFKO5 WHERE AUFPL = LT_AFKO5-AUFPL.
        LOOP AT LT_AFVV5.
          LT_FINAL-PLANNED_O_ACT = LT_FINAL-PLANNED_O_ACT + LT_AFVV5-ARBEI.
          LT_FINAL-ACTUAL_O_ACT = LT_FINAL-ACTUAL_O_ACT + LT_AFVV5-ISMNW.
          CLEAR: LT_AFVV5-ARBEI, LT_AFVV5-ISMNW.
        ENDLOOP.
      ENDIF.

    ENDLOOP.
    LT_FINAL-P_CRAFT_TIME = LT_FINAL-P_CRAFT_TIME * 60.
    LT_FINAL-A_CRAFT_TIME = LT_FINAL-A_CRAFT_TIME * 60.

    INDEX = WINDEX.
    SELECT SINGLE LTX INTO MONTH FROM T247 WHERE SPRAS EQ 'EN' AND MNR EQ P_MONTH.
    CONCATENATE 'Week ' INDEX ' of ' MONTH P_YEAR INTO LT_FINAL-WEEK RESPECTING BLANKS.

    SELECT * FROM CRHD INTO CORRESPONDING FIELDS OF TABLE LT_CRHD WHERE OBJTY EQ 'A' AND VERWE EQ '00PM' AND WERKS EQ P_PLANT.
    SELECT * FROM KAKO INTO CORRESPONDING FIELDS OF TABLE LT_KAKO FOR ALL ENTRIES IN LT_CRHD WHERE KAPID EQ LT_CRHD-KAPID.
    DATA: CAP(8)  TYPE C,
          CAP2(8) TYPE C.
    LOOP AT LT_KAKO.
      CLEAR CAP.
      CAP = 480 * LT_KAKO-AZNOR * LT_WEEK-WCOUNT.
      CAP2 = CAP2 + CAP.
    ENDLOOP.
    LT_FINAL-T_CRAFT_TIME = CAP2.

    DATA: TEMP1(5) TYPE C, TEMP2(5) TYPE C.
    CLEAR: TEMP1, TEMP2.
    IF LT_FINAL-A_CRAFT_TIME = 0 OR LT_FINAL-T_CRAFT_TIME = 0.
      TEMP2 = 0.
      LT_FINAL-ACT_EFECT = TEMP2.
    ELSE.
      TEMP2 = LT_FINAL-A_CRAFT_TIME / LT_FINAL-T_CRAFT_TIME.
      TEMP2 = TEMP2 * 100.
      LT_FINAL-ACT_EFECT = TEMP2.
    ENDIF.

    IF LT_FINAL-P_CRAFT_TIME = 0 OR LT_FINAL-T_CRAFT_TIME = 0.
      TEMP1 = 0.
      LT_FINAL-PCT_EFECT = TEMP1.
    ELSE.
      TEMP1 = LT_FINAL-P_CRAFT_TIME / LT_FINAL-T_CRAFT_TIME.
      TEMP1 = TEMP1 * 100.
      LT_FINAL-PCT_EFECT = TEMP1.
    ENDIF.

    LT_FINAL-PLANNED_PM = LT_FINAL-PLANNED_PM * 60.
    LT_FINAL-UNPLANNED_BM = LT_FINAL-UNPLANNED_BM * 60.
    LT_FINAL-PLANNED_CM = LT_FINAL-PLANNED_CM * 60.
    LT_FINAL-PLANNED_CNGOVER = LT_FINAL-PLANNED_CNGOVER * 60.
    LT_FINAL-PLANNED_O_ACT = LT_FINAL-PLANNED_O_ACT * 60.

    LT_FINAL-ACTUAL_PM = LT_FINAL-ACTUAL_PM * 60.
    LT_FINAL-ACTUAL_BM = LT_FINAL-ACTUAL_BM * 60.
    LT_FINAL-ACTUAL_CM = LT_FINAL-ACTUAL_CM * 60.
    LT_FINAL-ACTUAL_CNGOVER = LT_FINAL-ACTUAL_CNGOVER * 60.
    LT_FINAL-ACTUAL_O_ACT = LT_FINAL-ACTUAL_O_ACT * 60.


    DATA: SUM  TYPE INT4,
          SUM2 TYPE INT4.
    CLEAR: SUM,SUM2.
    SUM = LT_FINAL-PLANNED_PM + LT_FINAL-UNPLANNED_BM + LT_FINAL-PLANNED_CM + LT_FINAL-PLANNED_CNGOVER + LT_FINAL-PLANNED_O_ACT.
    SUM2 = LT_FINAL-ACTUAL_PM + LT_FINAL-ACTUAL_BM + LT_FINAL-ACTUAL_CM + LT_FINAL-ACTUAL_CNGOVER + LT_FINAL-ACTUAL_O_ACT.

    IF SUM NE 0.
      LT_FINAL-MM_PCT_PM = LT_FINAL-PLANNED_PM / SUM.
      LT_FINAL-MM_PCT_PM = LT_FINAL-MM_PCT_PM * 100.
      LT_FINAL-MM_PCT_BM = LT_FINAL-UNPLANNED_BM / SUM.
      LT_FINAL-MM_PCT_BM = LT_FINAL-MM_PCT_BM * 100.
      LT_FINAL-MM_PCT_CM = LT_FINAL-PLANNED_CM / SUM.
      LT_FINAL-MM_PCT_CM = LT_FINAL-MM_PCT_CM * 100.
      LT_FINAL-MM_PCT_CNGOVER = LT_FINAL-PLANNED_CNGOVER / SUM.
      LT_FINAL-MM_PCT_CNGOVER = LT_FINAL-MM_PCT_CNGOVER * 100.
      LT_FINAL-MM_PCT_OTHER = LT_FINAL-PLANNED_O_ACT / SUM.
      LT_FINAL-MM_PCT_OTHER = LT_FINAL-MM_PCT_OTHER * 100.
    ENDIF.

    IF SUM2 NE 0.
      LT_FINAL-MM_ACT_PM = LT_FINAL-ACTUAL_PM / SUM2.
      LT_FINAL-MM_ACT_PM = LT_FINAL-MM_ACT_PM * 100.
      LT_FINAL-MM_ACT_BM = LT_FINAL-ACTUAL_BM / SUM2.
      LT_FINAL-MM_ACT_BM = LT_FINAL-MM_ACT_BM * 100.
      LT_FINAL-MM_ACT_CM = LT_FINAL-ACTUAL_CM / SUM2.
      LT_FINAL-MM_ACT_CM = LT_FINAL-MM_ACT_CM * 100.
      LT_FINAL-MM_ACT_CNGOVER = LT_FINAL-ACTUAL_CNGOVER / SUM2.
      LT_FINAL-MM_ACT_CNGOVER = LT_FINAL-MM_ACT_CNGOVER * 100.
      LT_FINAL-MM_ACT_OTHER = LT_FINAL-ACTUAL_O_ACT / SUM2.
      LT_FINAL-MM_ACT_OTHER = LT_FINAL-MM_ACT_OTHER * 100.
    ENDIF.

    LT_FINAL-WEEKNO = WINDEX.
    CLEAR : PCOUNT , CCOUNT.
    LOOP AT LT_PLANNED WHERE WEEKNO = WINDEX.
      PCOUNT = PCOUNT + 1.
    ENDLOOP.
    LOOP AT LT_COMPLETED WHERE WEEKNO = WINDEX.
      CCOUNT = CCOUNT + 1.
    ENDLOOP.
    IF PCOUNT = 0.
      LT_FINAL-P_CRAFT_TIME = 0.
      LT_FINAL-A_CRAFT_TIME = 0.
    ENDIF.
    IF PCOUNT = 0 OR CCOUNT = 0.
      ADHEN = 0.
      LT_FINAL-PM_ADHERENCE = ADHEN.
    ELSE.
      ADHEN = CCOUNT / PCOUNT .
      ADHEN = ADHEN * 100.
      LT_FINAL-PM_ADHERENCE = ADHEN.
    ENDIF.
    LT_FINAL-WO_PLANNED = PCOUNT.
    LT_FINAL-WO_COMPLETED = CCOUNT.

    APPEND LT_FINAL TO LT_FINAL.
    CLEAR: PCOUNT,CCOUNT, CAP,CAP2,ADHEN, LT_FINAL-PLANNED_PM.

    IF P_WEEK EQ '0'.
      REFRESH LT_FINAL2.
      APPEND LINES OF LT_FINAL TO LT_FINAL2.
    ELSE.
      REFRESH LT_FINAL2.
      APPEND LINES OF LT_FINAL TO LT_FINAL2.
      DATA LT_FINALS LIKE LT_FINAL.
      READ TABLE LT_FINAL INTO LT_FINALS INDEX P_WEEK.
      DELETE LT_FINAL2 WHERE WEEK NE LT_FINALS-WEEK.
    ENDIF.

    WINDEX = WINDEX + 1.
  ENDLOOP.




ENDFORM.                    " DATA_RETRIEVAL

*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELDCATALOG
*&---------------------------------------------------------------------*
*       Build Fieldcatalog for ALV Report
*----------------------------------------------------------------------*
FORM BUILD_FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'WEEK'.
  FIELDCATALOG-SELTEXT_L   = 'Week'.
  FIELDCATALOG-COL_POS     = 0.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-KEY = 'X'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'WO_PLANNED'.
  FIELDCATALOG-SELTEXT_L   = 'Work Order Planned'.
  FIELDCATALOG-COL_POS     = 1.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-HOTSPOT   = 'X'.
  FIELDCATALOG-KEY = 'X'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'WO_COMPLETED'.
  FIELDCATALOG-SELTEXT_L   = 'Work Order Completed'.
  FIELDCATALOG-COL_POS     = 2.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-HOTSPOT   = 'X'.
  FIELDCATALOG-KEY = 'X'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'PM_ADHERENCE'.
  FIELDCATALOG-SELTEXT_L   = 'Maintenance Schedule Adherence'.
  FIELDCATALOG-COL_POS     = 3.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  FIELDCATALOG-EDIT_MASK   = '______%'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'T_CRAFT_TIME'.
  FIELDCATALOG-SELTEXT_L   = 'Total Craft time (in mins)'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-COL_POS     = 4.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'P_CRAFT_TIME'.
  FIELDCATALOG-SELTEXT_L   = 'Planned craft time (in mins)'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-COL_POS     = 5.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'A_CRAFT_TIME'.
  FIELDCATALOG-SELTEXT_L   = 'Actual craft time (in mins)'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-COL_POS     = 6.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'PCT_EFECT'.
  FIELDCATALOG-SELTEXT_L   = 'Effectiveness @ Planned craft time'.
  FIELDCATALOG-COL_POS     = 7.
  FIELDCATALOG-EDIT_MASK   = '______%'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'ACT_EFECT'.
  FIELDCATALOG-SELTEXT_L   = 'Effectiveness @ Actual craft time'.
  FIELDCATALOG-COL_POS     = 8.
  FIELDCATALOG-EDIT_MASK   = '______%'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'PLANNED_PM'.
  FIELDCATALOG-SELTEXT_L   = 'Planned PM (in mins)'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-COL_POS     = 9.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'UNPLANNED_BM'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'Unplanned BM (in mins)'.
  FIELDCATALOG-COL_POS     = 10.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'PLANNED_CM'.
  FIELDCATALOG-SELTEXT_L   = 'Planned CM (in mins)'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-COL_POS     = 11.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'PLANNED_CNGOVER'.
  FIELDCATALOG-SELTEXT_L   = 'Planned Changeover (in mins)'.
  FIELDCATALOG-COL_POS     = 12.
  FIELDCATALOG-JUST        = 'C'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'PLANNED_O_ACT'.
  FIELDCATALOG-SELTEXT_L   = 'Planned Other Activities (in mins)'.
  FIELDCATALOG-COL_POS     = 13.
  FIELDCATALOG-JUST        = 'C'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'MM_PCT_PM'.
  FIELDCATALOG-SELTEXT_L   = 'MM @ Planned craft time - PM'.
  FIELDCATALOG-COL_POS     = 14.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  FIELDCATALOG-EDIT_MASK   = '______%'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'MM_PCT_BM'.
  FIELDCATALOG-SELTEXT_L   = 'MM @ Planned craft time - BM'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-COL_POS     = 15.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  FIELDCATALOG-EDIT_MASK   = '______%'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'MM_PCT_CM'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'MM @ Planned craft time - CM'.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  FIELDCATALOG-EDIT_MASK   = '______%'.
  FIELDCATALOG-COL_POS     = 16.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'MM_PCT_CNGOVER'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'MM @ Planned craft time - Chngovr'.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  FIELDCATALOG-EDIT_MASK   = '______%'.
  FIELDCATALOG-COL_POS     = 17.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'MM_PCT_OTHER'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'MM @ Planned craft time - Others'.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  FIELDCATALOG-EDIT_MASK   = '______%'.
  FIELDCATALOG-COL_POS     = 18.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'ACTUAL_PM'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'Actual PM (in mins)'.
  FIELDCATALOG-COL_POS     = 19.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'ACTUAL_BM'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'Actual BM (in mins)'.
  FIELDCATALOG-COL_POS     = 20.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'ACTUAL_CM'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'Actual CM (in mins)'.
  FIELDCATALOG-COL_POS     = 21.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'ACTUAL_CNGOVER'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'Actual Changeover (in mins)'.
  FIELDCATALOG-COL_POS     = 22.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'ACTUAL_O_ACT'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'Actual Other Activities (in mins)'.
  FIELDCATALOG-COL_POS     = 23.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'MM_ACT_PM'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'MM @ Actual craft time - PM'.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  FIELDCATALOG-EDIT_MASK   = '______%'.
  FIELDCATALOG-COL_POS     = 24.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'MM_ACT_BM'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'MM @ Actual craft time - BM'.
  FIELDCATALOG-COL_POS     = 25.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  FIELDCATALOG-EDIT_MASK   = '______%'.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'MM_ACT_CM'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'MM @ Actual craft time - CM'.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  FIELDCATALOG-EDIT_MASK   = '______%'.
  FIELDCATALOG-COL_POS     = 26.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'MM_ACT_CNGOVER'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'MM @ Actual craft time - Chngovr'.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  FIELDCATALOG-EDIT_MASK   = '______%'.
  FIELDCATALOG-COL_POS     = 27.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

  FIELDCATALOG-FIELDNAME   = 'MM_ACT_OTHER'.
  FIELDCATALOG-JUST        = 'C'.
  FIELDCATALOG-SELTEXT_L   = 'MM @ Actual craft time - Others'.
  FIELDCATALOG-EMPHASIZE   = 'X'.
  FIELDCATALOG-EDIT_MASK   = '______%'.
  FIELDCATALOG-COL_POS     = 28.
  APPEND FIELDCATALOG TO FIELDCATALOG.
  CLEAR  FIELDCATALOG.

*  FIELDCATALOG2-FIELDNAME   = 'WEKNO'.
*  FIELDCATALOG2-SELTEXT_L   = 'Week No'.
*  FIELDCATALOG2-COL_POS     = 0.
*  FIELDCATALOG2-JUST        = 'C'.
*  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
*  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'AUFNR'.
  FIELDCATALOG2-SELTEXT_L   = 'Work Order Number'.
  FIELDCATALOG2-COL_POS     = 0.
  FIELDCATALOG2-JUST        = 'C'.
  FIELDCATALOG2-HOTSPOT   = 'X'.
  FIELDCATALOG2-EMPHASIZE   = 'X'.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'AUART'.
  FIELDCATALOG2-SELTEXT_L   = 'Work Order Type'.
  FIELDCATALOG2-COL_POS     = 1.
  FIELDCATALOG2-JUST        = 'C'.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'ILART'.
  FIELDCATALOG2-SELTEXT_L   = 'Activity Type'.
  FIELDCATALOG2-COL_POS     = 2.
  FIELDCATALOG2-JUST        = 'C'.

  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'STTXT'.
  FIELDCATALOG2-SELTEXT_L   = 'System Status'.
  FIELDCATALOG2-COL_POS     = 3.
  FIELDCATALOG2-JUST        = 'L'.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'REL'.
  FIELDCATALOG2-SELTEXT_L   = 'Release Date'.
  FIELDCATALOG2-JUST        = 'C'.
  FIELDCATALOG2-COL_POS     = 4.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'IDAT2'.
  FIELDCATALOG2-SELTEXT_L   = 'Technical Completion'.
  FIELDCATALOG2-JUST        = 'C'.
  FIELDCATALOG2-COL_POS     = 5.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'IDAT3'.
  FIELDCATALOG2-SELTEXT_L   = 'Closed Date'.
  FIELDCATALOG2-JUST        = 'C'.
  FIELDCATALOG2-COL_POS     = 6.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.


  FIELDCATALOG2-FIELDNAME   = 'GLTRP'.
  FIELDCATALOG2-SELTEXT_L   = 'Basic Finish Date'.
  FIELDCATALOG2-JUST        = 'C'.
  FIELDCATALOG2-COL_POS     = 7.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.

  FIELDCATALOG2-FIELDNAME   = 'BFD'.
  FIELDCATALOG2-SELTEXT_L   = 'Latest Basic Finish Date'.
  FIELDCATALOG2-JUST        = 'C'.
  FIELDCATALOG2-COL_POS     = 8.
  APPEND FIELDCATALOG2 TO FIELDCATALOG2.
  CLEAR  FIELDCATALOG2.



ENDFORM.                    " BUILD_FIELDCATALOG


*&---------------------------------------------------------------------*
*&      Form  BUILD_LAYOUT
*&---------------------------------------------------------------------*
*       Build layout for ALV grid report
*----------------------------------------------------------------------*
FORM BUILD_LAYOUT.
  GD_LAYOUT-NO_INPUT          = 'X'.
  GD_LAYOUT-COLWIDTH_OPTIMIZE = 'X'.
  GD_LAYOUT2-NO_INPUT          = 'X'.
  GD_LAYOUT2-COLWIDTH_OPTIMIZE = 'X'.
ENDFORM.                    " BUILD_LAYOUT


*-------------------------------------------------------------------*
* Form  TOP-OF-PAGE                                                 *
*-------------------------------------------------------------------*
* ALV Report Header                                                 *
*-------------------------------------------------------------------*
FORM TOP-OF-PAGE.
*ALV Header declarations
  DATA: T_HEADER      TYPE SLIS_T_LISTHEADER,
        WA_HEADER     TYPE SLIS_LISTHEADER,
        T_LINE        LIKE WA_HEADER-INFO,
        LD_LINES      TYPE I,
        LD_LINESC(40) TYPE C.

* Title
  WA_HEADER-TYP  = 'H'.
  WA_HEADER-INFO = 'Asset Care Maintenance KPI Tracker'.
  APPEND WA_HEADER TO T_HEADER.
  CLEAR WA_HEADER.

  WA_HEADER-TYP = 'S'.
  WA_HEADER-KEY = 'Plant: '.
  WA_HEADER-INFO = P_PLANT.
  APPEND WA_HEADER TO T_HEADER.
  CLEAR WA_HEADER.

  DATA : LT_CRHD2 TYPE TABLE OF CRHD WITH HEADER LINE,
         D_AZNOR  TYPE KAKO-AZNOR,
         A_AZNOR  TYPE NUMC5,
         DATA     TYPE STRING,
         COUNTS   TYPE CHAR10.

  WA_HEADER-TYP = 'S'.
  WA_HEADER-KEY = 'Total No of Capacity: '.
  SELECT * FROM CRHD INTO CORRESPONDING FIELDS OF TABLE LT_CRHD2 WHERE OBJTY = 'A' AND VERWE = '00PM' AND WERKS = P_PLANT.
  LOOP AT LT_CRHD.
    CLEAR: D_AZNOR, A_AZNOR.
    SELECT SINGLE AZNOR FROM KAKO INTO D_AZNOR WHERE KAPID = LT_CRHD-KAPID.
    A_AZNOR = D_AZNOR.
    COUNTS = COUNTS + A_AZNOR.
  ENDLOOP.
  WA_HEADER-INFO = COUNTS.

  APPEND WA_HEADER TO T_HEADER.
  CLEAR WA_HEADER.

  LOOP AT LT_CRHD.
    CLEAR: D_AZNOR, A_AZNOR.
    SELECT SINGLE AZNOR FROM KAKO INTO D_AZNOR WHERE KAPID = LT_CRHD-KAPID.
    A_AZNOR = D_AZNOR.
    WA_HEADER-TYP = 'A'.
    CONCATENATE LT_CRHD-ARBPL SPACE '-' A_AZNOR INTO WA_HEADER-INFO RESPECTING BLANKS.
    APPEND WA_HEADER TO T_HEADER.
    CLEAR WA_HEADER.
  ENDLOOP.


  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      IT_LIST_COMMENTARY = T_HEADER.
*            i_logo             = 'Z_LOGO'.
ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  BUILD_EVENTS
*&---------------------------------------------------------------------*
*       Build events table
*----------------------------------------------------------------------*
FORM BUILD_EVENTS.
  DATA: LS_EVENT TYPE SLIS_ALV_EVENT.

  CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
    EXPORTING
      I_LIST_TYPE = 0
    IMPORTING
      ET_EVENTS   = GT_EVENTS[].
  READ TABLE GT_EVENTS WITH KEY NAME =  SLIS_EV_END_OF_PAGE
                           INTO LS_EVENT.
  IF SY-SUBRC = 0.
    MOVE 'END_OF_PAGE' TO LS_EVENT-FORM.
    APPEND LS_EVENT TO GT_EVENTS.
  ENDIF.

  READ TABLE GT_EVENTS WITH KEY NAME =  SLIS_EV_END_OF_LIST
                         INTO LS_EVENT.
  IF SY-SUBRC = 0.
    MOVE 'END_OF_LIST' TO LS_EVENT-FORM.
    APPEND LS_EVENT TO GT_EVENTS.
  ENDIF.
ENDFORM.                    " BUILD_EVENTS


*&---------------------------------------------------------------------*
*&      Form  BUILD_PRINT_PARAMS
*&---------------------------------------------------------------------*
*       Setup print parameters
*----------------------------------------------------------------------*
FORM BUILD_PRINT_PARAMS.
  GD_PRNTPARAMS-RESERVE_LINES = '5'.   "Lines reserved for footer
  GD_PRNTPARAMS-NO_COVERPAGE = 'X'.
ENDFORM.                    " BUILD_PRINT_PARAMS


*&---------------------------------------------------------------------*
*&      Form  END_OF_PAGE
*&---------------------------------------------------------------------*
FORM END_OF_PAGE.
  DATA: LISTWIDTH      TYPE I,
        LD_PAGEPOS(10) TYPE C,
        LD_PAGE(10)    TYPE C.

  WRITE: SY-ULINE(50).
  SKIP.
  WRITE:/40 'Page:', SY-PAGNO .
ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  END_OF_LIST
*&---------------------------------------------------------------------*
FORM END_OF_LIST.

ENDFORM.

FORM USER_DROP_DOWN_LIST_FORDT.
  DATA: NAME  TYPE VRM_ID,
        LIST  TYPE VRM_VALUES,
        VALUE LIKE LINE OF LIST.
  DATA: T_MONTHS TYPE T247 OCCURS 0 WITH HEADER LINE.
  CLEAR LIST. REFRESH LIST.
  NAME = 'P_MONTH'.
  SELECT * INTO TABLE T_MONTHS
  FROM T247 WHERE SPRAS EQ 'EN'.
  SORT T_MONTHS ASCENDING BY MNR.
  LOOP AT T_MONTHS.
    CLEAR VALUE.
    VALUE-KEY = T_MONTHS-MNR.
    VALUE-TEXT = T_MONTHS-LTX.
    APPEND VALUE TO LIST.
    P_MONTH = '01'.
  ENDLOOP.

  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID     = NAME
      VALUES = LIST.
ENDFORM.

FORM USER_DROP_DOWN_LIST_FORYR.
  DATA: NAME  TYPE VRM_ID,
        LIST  TYPE VRM_VALUES,
        VALUE LIKE LINE OF LIST.
  CLEAR LIST. REFRESH LIST.
  NAME = 'P_YEAR'.
  DO 100 TIMES.
    CLEAR VALUE.
    VALUE-KEY = 2000 + SY-INDEX.
    APPEND VALUE TO LIST.
  ENDDO.

  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID     = NAME
      VALUES = LIST.
  P_YEAR = '2022'.
ENDFORM.

FORM USER_DROP_DOWN_LIST_FORWK.
  DATA: NAME  TYPE VRM_ID,
        LIST  TYPE VRM_VALUES,
        VALUE LIKE LINE OF LIST.
  CLEAR LIST. REFRESH LIST.
  NAME = 'P_WEEK'.
  DO 5 TIMES.
    CLEAR VALUE.
    VALUE-KEY = SY-INDEX.
    CONCATENATE 'Week' SPACE VALUE-KEY INTO VALUE-TEXT RESPECTING BLANKS.
    APPEND VALUE TO LIST.
  ENDDO.
  CLEAR VALUE.
  VALUE-KEY = '0'.
  VALUE-TEXT = 'ALL'.
  APPEND VALUE TO LIST.
  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      ID     = NAME
      VALUES = LIST.
  P_WEEK = '0'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_WEEKS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_WEEKS .
  DATA: PAR_MONTH LIKE  T009B-BUMON,
        PAR_YEAR  LIKE  T009B-BDATJ,
        PAR_DAYS  LIKE  T009B-BUTAG,
        SDATE     LIKE SY-DATUM,
        LDATE     LIKE SY-DATUM,
        TEMPD     TYPE SY-DATUM.

  PAR_MONTH = P_MONTH.
  PAR_YEAR = P_YEAR.
  CALL FUNCTION 'NUMBER_OF_DAYS_PER_MONTH_GET'
    EXPORTING
      PAR_MONTH = PAR_MONTH
      PAR_YEAR  = PAR_YEAR
    IMPORTING
      PAR_DAYS  = PAR_DAYS.
  DD = PAR_DAYS.
  CONCATENATE PAR_YEAR PAR_MONTH '01' INTO DATE1.
  CALL FUNCTION 'DATE_GET_WEEK'
    EXPORTING
      DATE = DATE1
    IMPORTING
      WEEK = WEEK1.
  CONCATENATE PAR_YEAR PAR_MONTH PAR_DAYS INTO DATE2.
  CALL FUNCTION 'DATE_GET_WEEK'
    EXPORTING
      DATE = DATE2
    IMPORTING
      WEEK = WEEK2.

  IF WEEK1+0(4) LT P_YEAR.
    CONCATENATE P_YEAR '01' INTO WEEK1.
  ENDIF.
  SWEEK = WEEK1+4(2).
  EWEEK = WEEK2+4(2).

  LOOPS = EWEEK - SWEEK.
  LOOPS = LOOPS + 1.
  DO LOOPS TIMES.
    CALL FUNCTION 'WEEK_GET_FIRST_DAY'
      EXPORTING
        WEEK = WEEK1
      IMPORTING
        DATE = SDATE.
    TEMP_WEEK = WEEK1 + 1.
    CALL FUNCTION 'WEEK_GET_FIRST_DAY'
      EXPORTING
        WEEK = TEMP_WEEK
      IMPORTING
        DATE = LDATE.
    LDATE = LDATE - 1.
    DATA: TDATE TYPE SY-DATUM,
          DAY   TYPE DTRESR-WEEKDAY.
    TEMPD = '0'.
    IF SDATE LT DATE1.
      SDATE = DATE1.
      TDATE = SDATE.
      WHILE TDATE <= LDATE.
        CALL FUNCTION 'DATE_TO_DAY'
          EXPORTING
            DATE    = TDATE
          IMPORTING
            WEEKDAY = DAY.
        IF DAY = 'Sunday'.
          TEMPD = '1'.
        ENDIF.
        TDATE = TDATE + 1.
      ENDWHILE.
      CLEAR TDATE.
    ELSEIF LDATE >= DATE2.
      LDATE = DATE2.
      TDATE = SDATE.
      WHILE TDATE <= LDATE.
        CALL FUNCTION 'DATE_TO_DAY'
          EXPORTING
            DATE    = TDATE
          IMPORTING
            WEEKDAY = DAY.
        IF DAY = 'Sunday'.
          TEMPD = '1'.
        ENDIF.
        TDATE = TDATE + 1.
      ENDWHILE.
      CLEAR TDATE.
    ENDIF.

    LT_WEEK-SIGN = 'I'.
    LT_WEEK-OPTION = 'BT'.
    LT_WEEK-LOW = SDATE.
    LT_WEEK-HIGH = LDATE.
    LT_WEEK-WEEK = SY-INDEX.
    IF LDATE EQ SDATE.
      LT_WEEK-WCOUNT = 1 - TEMPD.
    ELSE.
      LT_WEEK-WCOUNT = LDATE - SDATE - TEMPD.
    ENDIF.
    APPEND LT_WEEK TO LT_WEEK.
    CLEAR TEMPD.
    WEEK1 = WEEK1 + 1.
  ENDDO.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_REPORT
*&---------------------------------------------------------------------*
*       Display report using ALV grid
*----------------------------------------------------------------------*
FORM DISPLAY_ALV_REPORT.
  GD_REPID = SY-REPID.
  G_VARIANT-REPORT = SY-REPID.
  LAYOUT = '/DEFAULT'.
  G_VARIANT-VARIANT = LAYOUT.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM      = GD_REPID
      I_CALLBACK_TOP_OF_PAGE  = 'TOP-OF-PAGE'  "see FORM
      I_CALLBACK_USER_COMMAND = 'USER_COMMAND'
*     i_grid_title            = outtext
      IS_LAYOUT               = GD_LAYOUT
      IT_FIELDCAT             = FIELDCATALOG[]
*     it_special_groups       = gd_tabgroup
      IT_EVENTS               = GT_EVENTS
      IS_PRINT                = GD_PRNTPARAMS
      IS_VARIANT              = G_VARIANT
      I_SAVE                  = 'X'
    TABLES
      T_OUTTAB                = LT_FINAL2
    EXCEPTIONS
      PROGRAM_ERROR           = 1
      OTHERS                  = 2.
  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
ENDFORM.                    " DISPLAY_ALV_REPORT



FORM USER_COMMAND USING R_UCOMM TYPE SY-UCOMM
      RS_SELFIELD TYPE SLIS_SELFIELD.

  CASE R_UCOMM.
    WHEN '&IC1'.
      IF RS_SELFIELD-SEL_TAB_FIELD EQ '1-WO_PLANNED'.
        READ TABLE LT_FINAL2 INDEX RS_SELFIELD-TABINDEX INTO WA_FINAL.
        IF SY-SUBRC = 0.
          LOOP AT LT_PLANNED.
            IF LT_PLANNED-WEEKNO = WA_FINAL-WEEKNO.
              LT_SUBLIST-AUFNR = LT_PLANNED-AUFNR.
              LT_SUBLIST-AUART = LT_PLANNED-AUART.
              LT_SUBLIST-ILART  = LT_PLANNED-ILART.
              SELECT SINGLE ILART FROM AFIH INTO LT_SUBLIST-ILART WHERE AUFNR = LT_PLANNED-AUFNR.
              CALL FUNCTION 'STATUS_TEXT_EDIT'
                EXPORTING
                  CLIENT        = SY-MANDT
                  FLG_USER_STAT = 'X'
                  OBJNR         = LT_PLANNED-OBJNR
                  ONLY_ACTIVE   = 'X'
                  SPRAS         = SY-LANGU
*                 BYPASS_BUFFER = ' '
                IMPORTING
*                 ANW_STAT_EXISTING       =
*                 E_STSMA       =
                  LINE          = LT_SUBLIST-STTXT
*                 USER_LINE     =
*                 STONR         =
*               EXCEPTIONS
*                 OBJECT_NOT_FOUND        = 1
*                 OTHERS        = 2
                .
              LT_SUBLIST-REL = LT_PLANNED-REL.
              LT_SUBLIST-IDAT2 = LT_PLANNED-IDAT2.
              LT_SUBLIST-IDAT3 = LT_PLANNED-IDAT3.
              LT_SUBLIST-GLTRP = LT_PLANNED-GLTRP.
              LT_SUBLIST-BFD = LT_PLANNED-BFD.
              APPEND LT_SUBLIST TO LT_SUBLIST.
            ENDIF.
          ENDLOOP.
          PERFORM DISPLAYALV2.
        ENDIF.
      ENDIF.
      IF RS_SELFIELD-SEL_TAB_FIELD EQ '1-WO_COMPLETED'.
        READ TABLE LT_FINAL2 INDEX RS_SELFIELD-TABINDEX INTO WA_FINAL.
        IF WA_FINAL IS NOT INITIAL.
          LOOP AT LT_COMPLETED.
            IF LT_COMPLETED-WEEKNO = WA_FINAL-WEEKNO.
              LT_SUBLIST-AUFNR = LT_COMPLETED-AUFNR.
              LT_SUBLIST-AUART = LT_COMPLETED-AUART.
              SELECT SINGLE ILART FROM AFIH INTO LT_SUBLIST-ILART WHERE AUFNR = LT_COMPLETED-AUFNR.
              CALL FUNCTION 'STATUS_TEXT_EDIT'
                EXPORTING
                  CLIENT        = SY-MANDT
                  FLG_USER_STAT = 'X'
                  OBJNR         = LT_COMPLETED-OBJNR
                  ONLY_ACTIVE   = 'X'
                  SPRAS         = SY-LANGU
*                 BYPASS_BUFFER = ' '
                IMPORTING
*                 ANW_STAT_EXISTING       =
*                 E_STSMA       =
                  LINE          = LT_SUBLIST-STTXT
*                 USER_LINE     =
*                 STONR         =
*               EXCEPTIONS
*                 OBJECT_NOT_FOUND        = 1
*                 OTHERS        = 2
                .
              LT_SUBLIST-REL = LT_COMPLETED-REL.
              LT_SUBLIST-IDAT2 = LT_COMPLETED-IDAT2.
              LT_SUBLIST-IDAT3 = LT_COMPLETED-IDAT3.
              LT_SUBLIST-GLTRP = LT_COMPLETED-GLTRP.
              LT_SUBLIST-BFD = LT_COMPLETED-BFD.
              APPEND LT_SUBLIST TO LT_SUBLIST.
            ENDIF.
          ENDLOOP.
          PERFORM DISPLAYALV2.
        ELSE.
          MESSAGE 'No Data Found' TYPE 'S'.
        ENDIF.

      ENDIF.
      IF RS_SELFIELD-SEL_TAB_FIELD EQ '1-AUFNR'.
        READ TABLE LT_SUBLIST INDEX RS_SELFIELD-TABINDEX.
        SET PARAMETER ID 'ANR' FIELD LT_SUBLIST-AUFNR.
        CALL TRANSACTION 'IW33' AND SKIP FIRST SCREEN .
        CLEAR LT_SUBLIST.
      ENDIF.

  ENDCASE.

ENDFORM.




*&---------------------------------------------------------------------*
*&      Form  DISPLAYALV2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAYALV2 .
  G_VARIANT-REPORT = SY-REPID.
*  LAYOUT = '/MIN'.
*  G_VARIANT-VARIANT = LAYOUT.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM      = GD_REPID
      I_CALLBACK_USER_COMMAND = 'USER_COMMAND'
*     i_grid_title            = outtext
      IS_LAYOUT               = GD_LAYOUT2
      IT_FIELDCAT             = FIELDCATALOG2[]
*     it_special_groups       = gd_tabgroup
      IT_EVENTS               = GT_EVENTS
      IS_PRINT                = GD_PRNTPARAMS
      I_SAVE                  = 'X'
    TABLES
      T_OUTTAB                = LT_SUBLIST
    EXCEPTIONS
      PROGRAM_ERROR           = 1
      OTHERS                  = 2.
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
  REFRESH LT_SUBLIST.
ENDFORM.
